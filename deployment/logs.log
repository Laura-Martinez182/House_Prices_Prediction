2023-05-30 17:10:21,241:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-30 17:10:21,242:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-30 17:10:21,242:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-30 17:10:21,242:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-30 17:10:22,286:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-05-30 18:21:25,367:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-30 18:21:25,367:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-30 18:21:25,367:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-30 18:21:25,367:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-30 18:21:26,317:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-05-30 18:21:27,066:INFO:Initializing load_model()
2023-05-30 18:21:27,066:INFO:load_model(model_name=prediction_model, platform=None, authentication=None, verbose=True)
2023-05-30 18:21:27,187:WARNING:C:\Users\laura\AppData\Local\Programs\Python\Python38\lib\site-packages\pycaret\internal\pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '19.2.3', 'setuptools': '41.2.0', 'pycaret': '3.0.2', 'IPython': '8.12.2', 'ipywidgets': '8.0.6', 'tqdm': '4.65.0', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.2.0', 'sklearn': '1.2.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.28.2', 'matplotlib': '3.7.1', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.14.1', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.5'}, 'python': {'version': '3.8.2', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '23.1.2', 'setuptools': '67.7.2', 'pycaret': '3.0.2', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.65.0', 'numpy': '1.22.4', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.2.0', 'sklearn': '1.2.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.56.4', 'requests': '2.27.1', 'matplotlib': '3.7.1', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.13.1', 'kaleido': '0.2.1', 'statsmodels': '0.13.5', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.5'}, 'python': {'version': '3.10.11', 'machine': 'x86_64'}}
  warnings.warn(

2023-05-30 18:21:30,257:INFO:Initializing predict_model()
2023-05-30 18:21:30,257:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FF93C4D5B0>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['bedrooms', 'bathrooms'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['departments', 'property_type',
                                             'operation_type', 'city'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerW...operty_type', 'operation_type'],
                                    transformer=OneHotEncoder(cols=['property_type',
                                                                    'operation_type'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['departments', 'city'],
                                    transformer=TargetEncoder(cols=['departments',
                                                                    'city'],
                                                              handle_missing='return_nan'))),
                ('trained_model', LGBMRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=0, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001FF93C511F0>)
2023-05-30 18:21:30,257:INFO:Checking exceptions
2023-05-30 18:21:30,257:INFO:Preloading libraries
2023-05-30 18:21:30,257:INFO:Set up data.
2023-05-30 18:21:30,261:INFO:Set up index.
2023-05-30 18:21:35,540:INFO:Initializing predict_model()
2023-05-30 18:21:35,540:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FF93B7FF40>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['bedrooms', 'bathrooms'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['departments', 'property_type',
                                             'operation_type', 'city'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerW...operty_type', 'operation_type'],
                                    transformer=OneHotEncoder(cols=['property_type',
                                                                    'operation_type'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['departments', 'city'],
                                    transformer=TargetEncoder(cols=['departments',
                                                                    'city'],
                                                              handle_missing='return_nan'))),
                ('trained_model', LGBMRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=0, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001FF93CBE700>)
2023-05-30 18:21:35,540:INFO:Checking exceptions
2023-05-30 18:21:35,540:INFO:Preloading libraries
2023-05-30 18:21:35,540:INFO:Set up data.
2023-05-30 18:21:35,544:INFO:Set up index.
2023-05-30 18:22:09,106:INFO:Initializing predict_model()
2023-05-30 18:22:09,106:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FF93B7F7F0>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['bedrooms', 'bathrooms'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['departments', 'property_type',
                                             'operation_type', 'city'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerW...operty_type', 'operation_type'],
                                    transformer=OneHotEncoder(cols=['property_type',
                                                                    'operation_type'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['departments', 'city'],
                                    transformer=TargetEncoder(cols=['departments',
                                                                    'city'],
                                                              handle_missing='return_nan'))),
                ('trained_model', LGBMRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=0, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001FF93CBE280>)
2023-05-30 18:22:09,108:INFO:Checking exceptions
2023-05-30 18:22:09,108:INFO:Preloading libraries
2023-05-30 18:22:09,108:INFO:Set up data.
2023-05-30 18:22:09,112:INFO:Set up index.
2023-05-30 18:31:02,215:INFO:Initializing predict_model()
2023-05-30 18:31:02,217:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FF93B7F730>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['bedrooms', 'bathrooms'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['departments', 'property_type',
                                             'operation_type', 'city'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerW...operty_type', 'operation_type'],
                                    transformer=OneHotEncoder(cols=['property_type',
                                                                    'operation_type'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['departments', 'city'],
                                    transformer=TargetEncoder(cols=['departments',
                                                                    'city'],
                                                              handle_missing='return_nan'))),
                ('trained_model', LGBMRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=0, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001FF93CBE700>)
2023-05-30 18:31:02,217:INFO:Checking exceptions
2023-05-30 18:31:02,217:INFO:Preloading libraries
2023-05-30 18:31:02,217:INFO:Set up data.
2023-05-30 18:31:02,222:INFO:Set up index.
2023-05-30 18:34:36,086:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-30 18:34:36,086:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-30 18:34:36,086:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-30 18:34:36,086:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-30 18:34:37,182:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-05-30 18:34:37,875:INFO:Initializing load_model()
2023-05-30 18:34:37,875:INFO:load_model(model_name=prediction_model, platform=None, authentication=None, verbose=True)
2023-05-30 18:34:37,966:WARNING:C:\Users\laura\AppData\Local\Programs\Python\Python38\lib\site-packages\pycaret\internal\pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '19.2.3', 'setuptools': '41.2.0', 'pycaret': '3.0.2', 'IPython': '8.12.2', 'ipywidgets': '8.0.6', 'tqdm': '4.65.0', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.2.0', 'sklearn': '1.2.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.28.2', 'matplotlib': '3.7.1', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.14.1', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.5'}, 'python': {'version': '3.8.2', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '23.1.2', 'setuptools': '67.7.2', 'pycaret': '3.0.2', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.65.0', 'numpy': '1.22.4', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.2.0', 'sklearn': '1.2.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.56.4', 'requests': '2.27.1', 'matplotlib': '3.7.1', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.13.1', 'kaleido': '0.2.1', 'statsmodels': '0.13.5', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.5'}, 'python': {'version': '3.10.11', 'machine': 'x86_64'}}
  warnings.warn(

2023-05-30 18:34:51,645:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-30 18:34:51,645:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-30 18:34:51,645:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-30 18:34:51,645:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-30 18:34:52,221:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-05-30 18:34:52,856:INFO:Initializing load_model()
2023-05-30 18:34:52,856:INFO:load_model(model_name=prediction_model, platform=None, authentication=None, verbose=True)
2023-05-30 18:34:52,948:WARNING:C:\Users\laura\AppData\Local\Programs\Python\Python38\lib\site-packages\pycaret\internal\pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '19.2.3', 'setuptools': '41.2.0', 'pycaret': '3.0.2', 'IPython': '8.12.2', 'ipywidgets': '8.0.6', 'tqdm': '4.65.0', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.2.0', 'sklearn': '1.2.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.28.2', 'matplotlib': '3.7.1', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.14.1', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.5'}, 'python': {'version': '3.8.2', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '23.1.2', 'setuptools': '67.7.2', 'pycaret': '3.0.2', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.65.0', 'numpy': '1.22.4', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.2.0', 'sklearn': '1.2.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.56.4', 'requests': '2.27.1', 'matplotlib': '3.7.1', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.13.1', 'kaleido': '0.2.1', 'statsmodels': '0.13.5', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.5'}, 'python': {'version': '3.10.11', 'machine': 'x86_64'}}
  warnings.warn(

2023-05-30 18:35:02,418:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-30 18:35:02,418:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-30 18:35:02,418:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-30 18:35:02,418:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-30 18:35:03,001:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-05-30 18:35:03,751:INFO:Initializing load_model()
2023-05-30 18:35:03,751:INFO:load_model(model_name=prediction_model, platform=None, authentication=None, verbose=True)
2023-05-30 18:35:03,834:WARNING:C:\Users\laura\AppData\Local\Programs\Python\Python38\lib\site-packages\pycaret\internal\pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '19.2.3', 'setuptools': '41.2.0', 'pycaret': '3.0.2', 'IPython': '8.12.2', 'ipywidgets': '8.0.6', 'tqdm': '4.65.0', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.2.0', 'sklearn': '1.2.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.28.2', 'matplotlib': '3.7.1', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.14.1', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.5'}, 'python': {'version': '3.8.2', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '23.1.2', 'setuptools': '67.7.2', 'pycaret': '3.0.2', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.65.0', 'numpy': '1.22.4', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.2.0', 'sklearn': '1.2.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.56.4', 'requests': '2.27.1', 'matplotlib': '3.7.1', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.13.1', 'kaleido': '0.2.1', 'statsmodels': '0.13.5', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.5'}, 'python': {'version': '3.10.11', 'machine': 'x86_64'}}
  warnings.warn(

2023-05-30 18:35:48,239:INFO:Initializing predict_model()
2023-05-30 18:35:48,239:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000253E3683250>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['bedrooms', 'bathrooms'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['departments', 'property_type',
                                             'operation_type', 'city'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerW...operty_type', 'operation_type'],
                                    transformer=OneHotEncoder(cols=['property_type',
                                                                    'operation_type'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['departments', 'city'],
                                    transformer=TargetEncoder(cols=['departments',
                                                                    'city'],
                                                              handle_missing='return_nan'))),
                ('trained_model', LGBMRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=0, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000253E36818B0>)
2023-05-30 18:35:48,239:INFO:Checking exceptions
2023-05-30 18:35:48,239:INFO:Preloading libraries
2023-05-30 18:35:48,240:INFO:Set up data.
2023-05-30 18:35:48,245:INFO:Set up index.
2023-05-30 18:36:51,410:INFO:Initializing predict_model()
2023-05-30 18:36:51,410:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000253E3683B20>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['bedrooms', 'bathrooms'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['departments', 'property_type',
                                             'operation_type', 'city'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerW...operty_type', 'operation_type'],
                                    transformer=OneHotEncoder(cols=['property_type',
                                                                    'operation_type'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['departments', 'city'],
                                    transformer=TargetEncoder(cols=['departments',
                                                                    'city'],
                                                              handle_missing='return_nan'))),
                ('trained_model', LGBMRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=0, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000253E3707700>)
2023-05-30 18:36:51,410:INFO:Checking exceptions
2023-05-30 18:36:51,410:INFO:Preloading libraries
2023-05-30 18:36:51,411:INFO:Set up data.
2023-05-30 18:36:51,415:INFO:Set up index.
2023-05-30 18:37:08,875:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-30 18:37:08,875:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-30 18:37:08,875:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-30 18:37:08,875:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-30 18:37:09,373:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-05-30 18:37:09,842:INFO:Initializing load_model()
2023-05-30 18:37:09,842:INFO:load_model(model_name=prediction_model, platform=None, authentication=None, verbose=True)
2023-05-30 18:37:09,927:WARNING:C:\Users\laura\AppData\Local\Programs\Python\Python38\lib\site-packages\pycaret\internal\pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '19.2.3', 'setuptools': '41.2.0', 'pycaret': '3.0.2', 'IPython': '8.12.2', 'ipywidgets': '8.0.6', 'tqdm': '4.65.0', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.2.0', 'sklearn': '1.2.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.28.2', 'matplotlib': '3.7.1', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.14.1', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.5'}, 'python': {'version': '3.8.2', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '23.1.2', 'setuptools': '67.7.2', 'pycaret': '3.0.2', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.65.0', 'numpy': '1.22.4', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.2.0', 'sklearn': '1.2.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.56.4', 'requests': '2.27.1', 'matplotlib': '3.7.1', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.13.1', 'kaleido': '0.2.1', 'statsmodels': '0.13.5', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.5'}, 'python': {'version': '3.10.11', 'machine': 'x86_64'}}
  warnings.warn(

2023-05-30 18:37:29,205:INFO:Initializing predict_model()
2023-05-30 18:37:29,205:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C44082D880>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['bedrooms', 'bathrooms'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['departments', 'property_type',
                                             'operation_type', 'city'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerW...operty_type', 'operation_type'],
                                    transformer=OneHotEncoder(cols=['property_type',
                                                                    'operation_type'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['departments', 'city'],
                                    transformer=TargetEncoder(cols=['departments',
                                                                    'city'],
                                                              handle_missing='return_nan'))),
                ('trained_model', LGBMRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=0, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001C440831790>)
2023-05-30 18:37:29,205:INFO:Checking exceptions
2023-05-30 18:37:29,205:INFO:Preloading libraries
2023-05-30 18:37:29,205:INFO:Set up data.
2023-05-30 18:37:29,209:INFO:Set up index.
2023-05-30 18:48:00,717:INFO:Initializing predict_model()
2023-05-30 18:48:00,717:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C44082D820>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['bedrooms', 'bathrooms'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['departments', 'property_type',
                                             'operation_type', 'city'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerW...operty_type', 'operation_type'],
                                    transformer=OneHotEncoder(cols=['property_type',
                                                                    'operation_type'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['departments', 'city'],
                                    transformer=TargetEncoder(cols=['departments',
                                                                    'city'],
                                                              handle_missing='return_nan'))),
                ('trained_model', LGBMRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=0, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001C440856700>)
2023-05-30 18:48:00,718:INFO:Checking exceptions
2023-05-30 18:48:00,718:INFO:Preloading libraries
2023-05-30 18:48:00,718:INFO:Set up data.
2023-05-30 18:48:00,724:INFO:Set up index.
2023-05-30 18:49:20,577:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-30 18:49:20,577:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-30 18:49:20,577:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-30 18:49:20,577:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-30 18:49:21,401:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-05-30 18:49:22,074:INFO:Initializing load_model()
2023-05-30 18:49:22,074:INFO:load_model(model_name=prediction_model, platform=None, authentication=None, verbose=True)
2023-05-30 18:49:22,152:WARNING:C:\Users\laura\AppData\Local\Programs\Python\Python38\lib\site-packages\pycaret\internal\pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '19.2.3', 'setuptools': '41.2.0', 'pycaret': '3.0.2', 'IPython': '8.12.2', 'ipywidgets': '8.0.6', 'tqdm': '4.65.0', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.2.0', 'sklearn': '1.2.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.28.2', 'matplotlib': '3.7.1', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.14.1', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.5'}, 'python': {'version': '3.8.2', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '23.1.2', 'setuptools': '67.7.2', 'pycaret': '3.0.2', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.65.0', 'numpy': '1.22.4', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.2.0', 'sklearn': '1.2.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.56.4', 'requests': '2.27.1', 'matplotlib': '3.7.1', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.13.1', 'kaleido': '0.2.1', 'statsmodels': '0.13.5', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.5'}, 'python': {'version': '3.10.11', 'machine': 'x86_64'}}
  warnings.warn(

2023-05-30 20:27:36,693:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-30 20:27:36,693:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-30 20:27:36,693:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-30 20:27:36,693:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-30 20:27:37,879:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-05-30 20:27:38,959:INFO:Initializing load_model()
2023-05-30 20:27:38,960:INFO:load_model(model_name=prediction_model, platform=None, authentication=None, verbose=True)
2023-05-30 20:27:39,071:WARNING:C:\Users\laura\AppData\Local\Programs\Python\Python38\lib\site-packages\pycaret\internal\pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '19.2.3', 'setuptools': '41.2.0', 'pycaret': '3.0.2', 'IPython': '8.12.2', 'ipywidgets': '8.0.6', 'tqdm': '4.65.0', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.2.0', 'sklearn': '1.2.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.28.2', 'matplotlib': '3.7.1', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.14.1', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.5'}, 'python': {'version': '3.8.2', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '23.1.2', 'setuptools': '67.7.2', 'pycaret': '3.0.2', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.65.0', 'numpy': '1.22.4', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.2.0', 'sklearn': '1.2.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.56.4', 'requests': '2.27.1', 'matplotlib': '3.7.1', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.13.1', 'kaleido': '0.2.1', 'statsmodels': '0.13.5', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.5'}, 'python': {'version': '3.10.11', 'machine': 'x86_64'}}
  warnings.warn(

2023-05-30 20:28:17,196:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-30 20:28:17,196:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-30 20:28:17,196:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-30 20:28:17,196:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-30 20:28:17,892:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-05-30 20:28:18,491:INFO:Initializing load_model()
2023-05-30 20:28:18,491:INFO:load_model(model_name=prediction_model, platform=None, authentication=None, verbose=True)
2023-05-30 20:28:18,589:WARNING:C:\Users\laura\AppData\Local\Programs\Python\Python38\lib\site-packages\pycaret\internal\pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '19.2.3', 'setuptools': '41.2.0', 'pycaret': '3.0.2', 'IPython': '8.12.2', 'ipywidgets': '8.0.6', 'tqdm': '4.65.0', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.2.0', 'sklearn': '1.2.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.28.2', 'matplotlib': '3.7.1', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.14.1', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.5'}, 'python': {'version': '3.8.2', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '23.1.2', 'setuptools': '67.7.2', 'pycaret': '3.0.2', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.65.0', 'numpy': '1.22.4', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.2.0', 'sklearn': '1.2.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.56.4', 'requests': '2.27.1', 'matplotlib': '3.7.1', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.13.1', 'kaleido': '0.2.1', 'statsmodels': '0.13.5', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.5'}, 'python': {'version': '3.10.11', 'machine': 'x86_64'}}
  warnings.warn(

2023-05-30 20:32:43,931:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-30 20:32:43,931:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-30 20:32:43,932:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-30 20:32:43,932:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-30 20:32:44,617:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-05-30 20:32:45,162:INFO:Initializing load_model()
2023-05-30 20:32:45,162:INFO:load_model(model_name=prediction_model, platform=None, authentication=None, verbose=True)
2023-05-30 20:32:45,260:WARNING:C:\Users\laura\AppData\Local\Programs\Python\Python38\lib\site-packages\pycaret\internal\pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '19.2.3', 'setuptools': '41.2.0', 'pycaret': '3.0.2', 'IPython': '8.12.2', 'ipywidgets': '8.0.6', 'tqdm': '4.65.0', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.2.0', 'sklearn': '1.2.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.28.2', 'matplotlib': '3.7.1', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.14.1', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.5'}, 'python': {'version': '3.8.2', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '23.1.2', 'setuptools': '67.7.2', 'pycaret': '3.0.2', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.65.0', 'numpy': '1.22.4', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.2.0', 'sklearn': '1.2.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.56.4', 'requests': '2.27.1', 'matplotlib': '3.7.1', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.13.1', 'kaleido': '0.2.1', 'statsmodels': '0.13.5', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.5'}, 'python': {'version': '3.10.11', 'machine': 'x86_64'}}
  warnings.warn(

2023-05-30 20:39:35,467:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-30 20:39:35,467:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-30 20:39:35,467:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-30 20:39:35,467:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-30 20:39:36,782:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-05-30 20:39:37,962:INFO:Initializing load_model()
2023-05-30 20:39:37,962:INFO:load_model(model_name=prediction_model, platform=None, authentication=None, verbose=True)
2023-05-30 20:39:38,066:WARNING:C:\Users\laura\AppData\Local\Programs\Python\Python38\lib\site-packages\pycaret\internal\pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '19.2.3', 'setuptools': '41.2.0', 'pycaret': '3.0.2', 'IPython': '8.12.2', 'ipywidgets': '8.0.6', 'tqdm': '4.65.0', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.2.0', 'sklearn': '1.2.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.28.2', 'matplotlib': '3.7.1', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.14.1', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.5'}, 'python': {'version': '3.8.2', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '23.1.2', 'setuptools': '67.7.2', 'pycaret': '3.0.2', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.65.0', 'numpy': '1.22.4', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.2.0', 'sklearn': '1.2.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.56.4', 'requests': '2.27.1', 'matplotlib': '3.7.1', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.13.1', 'kaleido': '0.2.1', 'statsmodels': '0.13.5', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.5'}, 'python': {'version': '3.10.11', 'machine': 'x86_64'}}
  warnings.warn(

2023-05-30 20:41:33,713:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-30 20:41:33,713:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-30 20:41:33,714:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-30 20:41:33,714:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-30 20:41:34,389:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-05-30 20:41:34,973:INFO:Initializing load_model()
2023-05-30 20:41:34,973:INFO:load_model(model_name=prediction_model, platform=None, authentication=None, verbose=True)
2023-05-30 20:41:35,063:WARNING:C:\Users\laura\AppData\Local\Programs\Python\Python38\lib\site-packages\pycaret\internal\pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '19.2.3', 'setuptools': '41.2.0', 'pycaret': '3.0.2', 'IPython': '8.12.2', 'ipywidgets': '8.0.6', 'tqdm': '4.65.0', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.2.0', 'sklearn': '1.2.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.28.2', 'matplotlib': '3.7.1', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.14.1', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.5'}, 'python': {'version': '3.8.2', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '23.1.2', 'setuptools': '67.7.2', 'pycaret': '3.0.2', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.65.0', 'numpy': '1.22.4', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.2.0', 'sklearn': '1.2.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.56.4', 'requests': '2.27.1', 'matplotlib': '3.7.1', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.13.1', 'kaleido': '0.2.1', 'statsmodels': '0.13.5', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.5'}, 'python': {'version': '3.10.11', 'machine': 'x86_64'}}
  warnings.warn(

2023-05-30 20:42:08,176:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-30 20:42:08,176:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-30 20:42:08,176:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-30 20:42:08,177:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-30 20:42:08,832:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-05-30 20:42:09,507:INFO:Initializing load_model()
2023-05-30 20:42:09,507:INFO:load_model(model_name=prediction_model, platform=None, authentication=None, verbose=True)
2023-05-30 20:42:09,630:WARNING:C:\Users\laura\AppData\Local\Programs\Python\Python38\lib\site-packages\pycaret\internal\pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '19.2.3', 'setuptools': '41.2.0', 'pycaret': '3.0.2', 'IPython': '8.12.2', 'ipywidgets': '8.0.6', 'tqdm': '4.65.0', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.2.0', 'sklearn': '1.2.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.28.2', 'matplotlib': '3.7.1', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.14.1', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.5'}, 'python': {'version': '3.8.2', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '23.1.2', 'setuptools': '67.7.2', 'pycaret': '3.0.2', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.65.0', 'numpy': '1.22.4', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.2.0', 'sklearn': '1.2.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.56.4', 'requests': '2.27.1', 'matplotlib': '3.7.1', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.13.1', 'kaleido': '0.2.1', 'statsmodels': '0.13.5', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.5'}, 'python': {'version': '3.10.11', 'machine': 'x86_64'}}
  warnings.warn(

2023-05-30 20:42:26,985:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-30 20:42:26,985:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-30 20:42:26,985:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-30 20:42:26,985:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-30 20:42:27,725:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-05-30 20:42:28,250:INFO:Initializing load_model()
2023-05-30 20:42:28,250:INFO:load_model(model_name=prediction_model, platform=None, authentication=None, verbose=True)
2023-05-30 20:42:28,336:WARNING:C:\Users\laura\AppData\Local\Programs\Python\Python38\lib\site-packages\pycaret\internal\pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '19.2.3', 'setuptools': '41.2.0', 'pycaret': '3.0.2', 'IPython': '8.12.2', 'ipywidgets': '8.0.6', 'tqdm': '4.65.0', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.2.0', 'sklearn': '1.2.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.28.2', 'matplotlib': '3.7.1', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.14.1', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.5'}, 'python': {'version': '3.8.2', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '23.1.2', 'setuptools': '67.7.2', 'pycaret': '3.0.2', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.65.0', 'numpy': '1.22.4', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.2.0', 'sklearn': '1.2.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.56.4', 'requests': '2.27.1', 'matplotlib': '3.7.1', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.13.1', 'kaleido': '0.2.1', 'statsmodels': '0.13.5', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.5'}, 'python': {'version': '3.10.11', 'machine': 'x86_64'}}
  warnings.warn(

2023-05-30 20:42:42,316:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-30 20:42:42,316:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-30 20:42:42,317:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-30 20:42:42,317:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-30 20:42:42,928:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-05-30 20:42:43,447:INFO:Initializing load_model()
2023-05-30 20:42:43,448:INFO:load_model(model_name=prediction_model, platform=None, authentication=None, verbose=True)
2023-05-30 20:42:43,547:WARNING:C:\Users\laura\AppData\Local\Programs\Python\Python38\lib\site-packages\pycaret\internal\pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '19.2.3', 'setuptools': '41.2.0', 'pycaret': '3.0.2', 'IPython': '8.12.2', 'ipywidgets': '8.0.6', 'tqdm': '4.65.0', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.2.0', 'sklearn': '1.2.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.28.2', 'matplotlib': '3.7.1', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.14.1', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.5'}, 'python': {'version': '3.8.2', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '23.1.2', 'setuptools': '67.7.2', 'pycaret': '3.0.2', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.65.0', 'numpy': '1.22.4', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.2.0', 'sklearn': '1.2.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.56.4', 'requests': '2.27.1', 'matplotlib': '3.7.1', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.13.1', 'kaleido': '0.2.1', 'statsmodels': '0.13.5', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.5'}, 'python': {'version': '3.10.11', 'machine': 'x86_64'}}
  warnings.warn(

2023-05-30 20:51:50,816:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-30 20:51:50,816:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-30 20:51:50,817:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-30 20:51:50,817:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-30 20:51:51,536:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-05-30 20:51:52,101:INFO:Initializing load_model()
2023-05-30 20:51:52,101:INFO:load_model(model_name=prediction_model, platform=None, authentication=None, verbose=True)
2023-05-30 20:51:52,198:WARNING:C:\Users\laura\AppData\Local\Programs\Python\Python38\lib\site-packages\pycaret\internal\pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '19.2.3', 'setuptools': '41.2.0', 'pycaret': '3.0.2', 'IPython': '8.12.2', 'ipywidgets': '8.0.6', 'tqdm': '4.65.0', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.2.0', 'sklearn': '1.2.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.28.2', 'matplotlib': '3.7.1', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.14.1', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.5'}, 'python': {'version': '3.8.2', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '23.1.2', 'setuptools': '67.7.2', 'pycaret': '3.0.2', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.65.0', 'numpy': '1.22.4', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.2.0', 'sklearn': '1.2.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.56.4', 'requests': '2.27.1', 'matplotlib': '3.7.1', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.13.1', 'kaleido': '0.2.1', 'statsmodels': '0.13.5', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.5'}, 'python': {'version': '3.10.11', 'machine': 'x86_64'}}
  warnings.warn(

2023-05-30 20:53:08,267:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-30 20:53:08,267:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-30 20:53:08,268:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-30 20:53:08,268:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-30 20:53:08,912:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-05-30 20:53:09,860:INFO:Initializing load_model()
2023-05-30 20:53:09,860:INFO:load_model(model_name=prediction_model, platform=None, authentication=None, verbose=True)
2023-05-30 20:53:10,006:WARNING:C:\Users\laura\AppData\Local\Programs\Python\Python38\lib\site-packages\pycaret\internal\pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '19.2.3', 'setuptools': '41.2.0', 'pycaret': '3.0.2', 'IPython': '8.12.2', 'ipywidgets': '8.0.6', 'tqdm': '4.65.0', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.2.0', 'sklearn': '1.2.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.28.2', 'matplotlib': '3.7.1', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.14.1', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.5'}, 'python': {'version': '3.8.2', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '23.1.2', 'setuptools': '67.7.2', 'pycaret': '3.0.2', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.65.0', 'numpy': '1.22.4', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.2.0', 'sklearn': '1.2.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.56.4', 'requests': '2.27.1', 'matplotlib': '3.7.1', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.13.1', 'kaleido': '0.2.1', 'statsmodels': '0.13.5', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.5'}, 'python': {'version': '3.10.11', 'machine': 'x86_64'}}
  warnings.warn(

2023-05-30 21:04:21,511:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-30 21:04:21,511:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-30 21:04:21,511:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-30 21:04:21,511:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-30 21:04:22,108:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-05-30 21:04:22,681:INFO:Initializing load_model()
2023-05-30 21:04:22,681:INFO:load_model(model_name=prediction_model, platform=None, authentication=None, verbose=True)
2023-05-30 21:04:22,772:WARNING:C:\Users\laura\AppData\Local\Programs\Python\Python38\lib\site-packages\pycaret\internal\pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '19.2.3', 'setuptools': '41.2.0', 'pycaret': '3.0.2', 'IPython': '8.12.2', 'ipywidgets': '8.0.6', 'tqdm': '4.65.0', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.2.0', 'sklearn': '1.2.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.28.2', 'matplotlib': '3.7.1', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.14.1', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.5'}, 'python': {'version': '3.8.2', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '23.1.2', 'setuptools': '67.7.2', 'pycaret': '3.0.2', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.65.0', 'numpy': '1.22.4', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.2.0', 'sklearn': '1.2.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.56.4', 'requests': '2.27.1', 'matplotlib': '3.7.1', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.13.1', 'kaleido': '0.2.1', 'statsmodels': '0.13.5', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.5'}, 'python': {'version': '3.10.11', 'machine': 'x86_64'}}
  warnings.warn(

2023-05-30 21:10:54,844:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-30 21:10:54,844:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-30 21:10:54,845:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-30 21:10:54,845:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-30 21:10:55,943:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-05-30 21:10:56,836:INFO:Initializing load_model()
2023-05-30 21:10:56,836:INFO:load_model(model_name=prediction_model, platform=None, authentication=None, verbose=True)
2023-05-30 21:10:56,929:WARNING:C:\Users\laura\AppData\Local\Programs\Python\Python38\lib\site-packages\pycaret\internal\pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '19.2.3', 'setuptools': '41.2.0', 'pycaret': '3.0.2', 'IPython': '8.12.2', 'ipywidgets': '8.0.6', 'tqdm': '4.65.0', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.2.0', 'sklearn': '1.2.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.28.2', 'matplotlib': '3.7.1', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.14.1', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.5'}, 'python': {'version': '3.8.2', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '23.1.2', 'setuptools': '67.7.2', 'pycaret': '3.0.2', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.65.0', 'numpy': '1.22.4', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.2.0', 'sklearn': '1.2.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.56.4', 'requests': '2.27.1', 'matplotlib': '3.7.1', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.13.1', 'kaleido': '0.2.1', 'statsmodels': '0.13.5', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.5'}, 'python': {'version': '3.10.11', 'machine': 'x86_64'}}
  warnings.warn(

2023-05-30 21:14:19,744:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-30 21:14:19,744:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-30 21:14:19,744:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-30 21:14:19,744:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-30 21:14:20,359:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-05-30 21:14:20,879:INFO:Initializing load_model()
2023-05-30 21:14:20,879:INFO:load_model(model_name=prediction_model, platform=None, authentication=None, verbose=True)
2023-05-30 21:14:20,999:WARNING:C:\Users\laura\AppData\Local\Programs\Python\Python38\lib\site-packages\pycaret\internal\pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '19.2.3', 'setuptools': '41.2.0', 'pycaret': '3.0.2', 'IPython': '8.12.2', 'ipywidgets': '8.0.6', 'tqdm': '4.65.0', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.2.0', 'sklearn': '1.2.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.28.2', 'matplotlib': '3.7.1', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.14.1', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.5'}, 'python': {'version': '3.8.2', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '23.1.2', 'setuptools': '67.7.2', 'pycaret': '3.0.2', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.65.0', 'numpy': '1.22.4', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.2.0', 'sklearn': '1.2.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.56.4', 'requests': '2.27.1', 'matplotlib': '3.7.1', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.13.1', 'kaleido': '0.2.1', 'statsmodels': '0.13.5', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.5'}, 'python': {'version': '3.10.11', 'machine': 'x86_64'}}
  warnings.warn(

2023-05-30 21:16:33,796:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-30 21:16:33,796:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-30 21:16:33,796:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-30 21:16:33,796:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-30 21:16:34,662:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-05-30 21:16:35,325:INFO:Initializing load_model()
2023-05-30 21:16:35,325:INFO:load_model(model_name=prediction_model, platform=None, authentication=None, verbose=True)
2023-05-30 21:16:35,443:WARNING:C:\Users\laura\AppData\Local\Programs\Python\Python38\lib\site-packages\pycaret\internal\pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '19.2.3', 'setuptools': '41.2.0', 'pycaret': '3.0.2', 'IPython': '8.12.2', 'ipywidgets': '8.0.6', 'tqdm': '4.65.0', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.2.0', 'sklearn': '1.2.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.28.2', 'matplotlib': '3.7.1', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.14.1', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.5'}, 'python': {'version': '3.8.2', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '23.1.2', 'setuptools': '67.7.2', 'pycaret': '3.0.2', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.65.0', 'numpy': '1.22.4', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.2.0', 'sklearn': '1.2.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.56.4', 'requests': '2.27.1', 'matplotlib': '3.7.1', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.13.1', 'kaleido': '0.2.1', 'statsmodels': '0.13.5', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.5'}, 'python': {'version': '3.10.11', 'machine': 'x86_64'}}
  warnings.warn(

2023-05-30 21:18:59,319:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-30 21:18:59,320:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-30 21:18:59,320:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-30 21:18:59,320:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-30 21:19:00,110:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-05-30 21:19:00,656:INFO:Initializing load_model()
2023-05-30 21:19:00,656:INFO:load_model(model_name=prediction_model, platform=None, authentication=None, verbose=True)
2023-05-30 21:19:00,749:WARNING:C:\Users\laura\AppData\Local\Programs\Python\Python38\lib\site-packages\pycaret\internal\pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '19.2.3', 'setuptools': '41.2.0', 'pycaret': '3.0.2', 'IPython': '8.12.2', 'ipywidgets': '8.0.6', 'tqdm': '4.65.0', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.2.0', 'sklearn': '1.2.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.28.2', 'matplotlib': '3.7.1', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.14.1', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.5'}, 'python': {'version': '3.8.2', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '23.1.2', 'setuptools': '67.7.2', 'pycaret': '3.0.2', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.65.0', 'numpy': '1.22.4', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.2.0', 'sklearn': '1.2.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.56.4', 'requests': '2.27.1', 'matplotlib': '3.7.1', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.13.1', 'kaleido': '0.2.1', 'statsmodels': '0.13.5', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.5'}, 'python': {'version': '3.10.11', 'machine': 'x86_64'}}
  warnings.warn(

2023-05-30 21:21:07,928:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-30 21:21:07,928:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-30 21:21:07,930:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-30 21:21:07,930:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-30 21:21:08,580:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-05-30 21:21:09,124:INFO:Initializing load_model()
2023-05-30 21:21:09,124:INFO:load_model(model_name=prediction_model, platform=None, authentication=None, verbose=True)
2023-05-30 21:21:09,225:WARNING:C:\Users\laura\AppData\Local\Programs\Python\Python38\lib\site-packages\pycaret\internal\pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '19.2.3', 'setuptools': '41.2.0', 'pycaret': '3.0.2', 'IPython': '8.12.2', 'ipywidgets': '8.0.6', 'tqdm': '4.65.0', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.2.0', 'sklearn': '1.2.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.28.2', 'matplotlib': '3.7.1', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.14.1', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.5'}, 'python': {'version': '3.8.2', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '23.1.2', 'setuptools': '67.7.2', 'pycaret': '3.0.2', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.65.0', 'numpy': '1.22.4', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.2.0', 'sklearn': '1.2.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.56.4', 'requests': '2.27.1', 'matplotlib': '3.7.1', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.13.1', 'kaleido': '0.2.1', 'statsmodels': '0.13.5', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.5'}, 'python': {'version': '3.10.11', 'machine': 'x86_64'}}
  warnings.warn(

2023-05-30 21:27:57,109:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-30 21:27:57,109:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-30 21:27:57,110:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-30 21:27:57,110:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-30 21:27:57,729:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-05-30 21:27:58,275:INFO:Initializing load_model()
2023-05-30 21:27:58,275:INFO:load_model(model_name=prediction_model, platform=None, authentication=None, verbose=True)
2023-05-30 21:27:58,371:WARNING:C:\Users\laura\AppData\Local\Programs\Python\Python38\lib\site-packages\pycaret\internal\pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '19.2.3', 'setuptools': '41.2.0', 'pycaret': '3.0.2', 'IPython': '8.12.2', 'ipywidgets': '8.0.6', 'tqdm': '4.65.0', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.2.0', 'sklearn': '1.2.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.28.2', 'matplotlib': '3.7.1', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.14.1', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.5'}, 'python': {'version': '3.8.2', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '23.1.2', 'setuptools': '67.7.2', 'pycaret': '3.0.2', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.65.0', 'numpy': '1.22.4', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.2.0', 'sklearn': '1.2.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.56.4', 'requests': '2.27.1', 'matplotlib': '3.7.1', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.13.1', 'kaleido': '0.2.1', 'statsmodels': '0.13.5', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.5'}, 'python': {'version': '3.10.11', 'machine': 'x86_64'}}
  warnings.warn(

2023-05-30 21:30:13,454:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-30 21:30:13,454:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-30 21:30:13,454:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-30 21:30:13,454:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-30 21:30:14,065:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-05-30 21:30:14,683:INFO:Initializing load_model()
2023-05-30 21:30:14,683:INFO:load_model(model_name=prediction_model, platform=None, authentication=None, verbose=True)
2023-05-30 21:30:14,774:WARNING:C:\Users\laura\AppData\Local\Programs\Python\Python38\lib\site-packages\pycaret\internal\pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '19.2.3', 'setuptools': '41.2.0', 'pycaret': '3.0.2', 'IPython': '8.12.2', 'ipywidgets': '8.0.6', 'tqdm': '4.65.0', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.2.0', 'sklearn': '1.2.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.28.2', 'matplotlib': '3.7.1', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.14.1', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.5'}, 'python': {'version': '3.8.2', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '23.1.2', 'setuptools': '67.7.2', 'pycaret': '3.0.2', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.65.0', 'numpy': '1.22.4', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.2.0', 'sklearn': '1.2.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.56.4', 'requests': '2.27.1', 'matplotlib': '3.7.1', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.13.1', 'kaleido': '0.2.1', 'statsmodels': '0.13.5', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.5'}, 'python': {'version': '3.10.11', 'machine': 'x86_64'}}
  warnings.warn(

2023-05-30 21:43:36,144:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-30 21:43:36,144:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-30 21:43:36,144:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-30 21:43:36,144:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-30 21:43:36,755:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-05-30 21:43:37,328:INFO:Initializing load_model()
2023-05-30 21:43:37,328:INFO:load_model(model_name=prediction_model, platform=None, authentication=None, verbose=True)
2023-05-30 21:43:37,412:WARNING:C:\Users\laura\AppData\Local\Programs\Python\Python38\lib\site-packages\pycaret\internal\pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '19.2.3', 'setuptools': '41.2.0', 'pycaret': '3.0.2', 'IPython': '8.12.2', 'ipywidgets': '8.0.6', 'tqdm': '4.65.0', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.2.0', 'sklearn': '1.2.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.28.2', 'matplotlib': '3.7.1', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.14.1', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.5'}, 'python': {'version': '3.8.2', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '23.1.2', 'setuptools': '67.7.2', 'pycaret': '3.0.2', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.65.0', 'numpy': '1.22.4', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.2.0', 'sklearn': '1.2.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.56.4', 'requests': '2.27.1', 'matplotlib': '3.7.1', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.13.1', 'kaleido': '0.2.1', 'statsmodels': '0.13.5', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.5'}, 'python': {'version': '3.10.11', 'machine': 'x86_64'}}
  warnings.warn(

2023-05-30 21:45:13,492:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-30 21:45:13,492:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-30 21:45:13,492:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-30 21:45:13,492:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-30 21:45:14,124:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-05-30 21:45:14,812:INFO:Initializing load_model()
2023-05-30 21:45:14,812:INFO:load_model(model_name=prediction_model, platform=None, authentication=None, verbose=True)
2023-05-30 21:45:14,947:WARNING:C:\Users\laura\AppData\Local\Programs\Python\Python38\lib\site-packages\pycaret\internal\pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '19.2.3', 'setuptools': '41.2.0', 'pycaret': '3.0.2', 'IPython': '8.12.2', 'ipywidgets': '8.0.6', 'tqdm': '4.65.0', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.2.0', 'sklearn': '1.2.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.28.2', 'matplotlib': '3.7.1', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.14.1', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.5'}, 'python': {'version': '3.8.2', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '23.1.2', 'setuptools': '67.7.2', 'pycaret': '3.0.2', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.65.0', 'numpy': '1.22.4', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.2.0', 'sklearn': '1.2.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.56.4', 'requests': '2.27.1', 'matplotlib': '3.7.1', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.13.1', 'kaleido': '0.2.1', 'statsmodels': '0.13.5', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.5'}, 'python': {'version': '3.10.11', 'machine': 'x86_64'}}
  warnings.warn(

2023-05-30 21:55:06,659:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-30 21:55:06,659:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-30 21:55:06,659:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-30 21:55:06,659:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-30 21:55:07,290:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-05-30 21:55:07,855:INFO:Initializing load_model()
2023-05-30 21:55:07,855:INFO:load_model(model_name=prediction_model, platform=None, authentication=None, verbose=True)
2023-05-30 21:55:07,949:WARNING:C:\Users\laura\AppData\Local\Programs\Python\Python38\lib\site-packages\pycaret\internal\pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '19.2.3', 'setuptools': '41.2.0', 'pycaret': '3.0.2', 'IPython': '8.12.2', 'ipywidgets': '8.0.6', 'tqdm': '4.65.0', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.2.0', 'sklearn': '1.2.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.28.2', 'matplotlib': '3.7.1', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.14.1', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.5'}, 'python': {'version': '3.8.2', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '23.1.2', 'setuptools': '67.7.2', 'pycaret': '3.0.2', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.65.0', 'numpy': '1.22.4', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.2.0', 'sklearn': '1.2.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.56.4', 'requests': '2.27.1', 'matplotlib': '3.7.1', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.13.1', 'kaleido': '0.2.1', 'statsmodels': '0.13.5', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.5'}, 'python': {'version': '3.10.11', 'machine': 'x86_64'}}
  warnings.warn(

2023-05-30 21:56:29,335:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-30 21:56:29,335:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-30 21:56:29,335:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-30 21:56:29,335:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-30 21:56:30,317:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-05-30 21:56:31,074:INFO:Initializing load_model()
2023-05-30 21:56:31,074:INFO:load_model(model_name=prediction_model, platform=None, authentication=None, verbose=True)
2023-05-30 21:56:31,186:WARNING:C:\Users\laura\AppData\Local\Programs\Python\Python38\lib\site-packages\pycaret\internal\pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '19.2.3', 'setuptools': '41.2.0', 'pycaret': '3.0.2', 'IPython': '8.12.2', 'ipywidgets': '8.0.6', 'tqdm': '4.65.0', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.2.0', 'sklearn': '1.2.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.28.2', 'matplotlib': '3.7.1', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.14.1', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.5'}, 'python': {'version': '3.8.2', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '23.1.2', 'setuptools': '67.7.2', 'pycaret': '3.0.2', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.65.0', 'numpy': '1.22.4', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.2.0', 'sklearn': '1.2.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.56.4', 'requests': '2.27.1', 'matplotlib': '3.7.1', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.13.1', 'kaleido': '0.2.1', 'statsmodels': '0.13.5', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.5'}, 'python': {'version': '3.10.11', 'machine': 'x86_64'}}
  warnings.warn(

2023-05-30 22:02:10,644:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-30 22:02:10,645:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-30 22:02:10,645:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-30 22:02:10,645:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-30 22:02:11,273:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-05-30 22:02:11,800:INFO:Initializing load_model()
2023-05-30 22:02:11,800:INFO:load_model(model_name=prediction_model, platform=None, authentication=None, verbose=True)
2023-05-30 22:02:11,893:WARNING:C:\Users\laura\AppData\Local\Programs\Python\Python38\lib\site-packages\pycaret\internal\pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '19.2.3', 'setuptools': '41.2.0', 'pycaret': '3.0.2', 'IPython': '8.12.2', 'ipywidgets': '8.0.6', 'tqdm': '4.65.0', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.2.0', 'sklearn': '1.2.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.28.2', 'matplotlib': '3.7.1', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.14.1', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.5'}, 'python': {'version': '3.8.2', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '23.1.2', 'setuptools': '67.7.2', 'pycaret': '3.0.2', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.65.0', 'numpy': '1.22.4', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.2.0', 'sklearn': '1.2.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.56.4', 'requests': '2.27.1', 'matplotlib': '3.7.1', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.13.1', 'kaleido': '0.2.1', 'statsmodels': '0.13.5', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.5'}, 'python': {'version': '3.10.11', 'machine': 'x86_64'}}
  warnings.warn(

2023-05-30 22:03:45,460:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-30 22:03:45,461:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-30 22:03:45,461:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-30 22:03:45,461:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-30 22:03:46,428:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-05-30 22:03:46,964:INFO:Initializing load_model()
2023-05-30 22:03:46,964:INFO:load_model(model_name=prediction_model, platform=None, authentication=None, verbose=True)
2023-05-30 22:03:47,064:WARNING:C:\Users\laura\AppData\Local\Programs\Python\Python38\lib\site-packages\pycaret\internal\pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '19.2.3', 'setuptools': '41.2.0', 'pycaret': '3.0.2', 'IPython': '8.12.2', 'ipywidgets': '8.0.6', 'tqdm': '4.65.0', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.2.0', 'sklearn': '1.2.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.28.2', 'matplotlib': '3.7.1', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.14.1', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.5'}, 'python': {'version': '3.8.2', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '23.1.2', 'setuptools': '67.7.2', 'pycaret': '3.0.2', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.65.0', 'numpy': '1.22.4', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.2.0', 'sklearn': '1.2.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.56.4', 'requests': '2.27.1', 'matplotlib': '3.7.1', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.13.1', 'kaleido': '0.2.1', 'statsmodels': '0.13.5', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.5'}, 'python': {'version': '3.10.11', 'machine': 'x86_64'}}
  warnings.warn(

2023-05-30 22:06:58,751:INFO:Initializing predict_model()
2023-05-30 22:06:58,751:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000292DA37AD30>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['bedrooms', 'bathrooms'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['departments', 'property_type',
                                             'operation_type', 'city'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerW...operty_type', 'operation_type'],
                                    transformer=OneHotEncoder(cols=['property_type',
                                                                    'operation_type'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['departments', 'city'],
                                    transformer=TargetEncoder(cols=['departments',
                                                                    'city'],
                                                              handle_missing='return_nan'))),
                ('trained_model', LGBMRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=0, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000292DA37D160>)
2023-05-30 22:06:58,751:INFO:Checking exceptions
2023-05-30 22:06:58,751:INFO:Preloading libraries
2023-05-30 22:06:58,752:INFO:Set up data.
2023-05-30 22:06:58,757:INFO:Set up index.
2023-05-30 22:07:57,301:INFO:Initializing predict_model()
2023-05-30 22:07:57,301:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000292DA37ADC0>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['bedrooms', 'bathrooms'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['departments', 'property_type',
                                             'operation_type', 'city'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerW...operty_type', 'operation_type'],
                                    transformer=OneHotEncoder(cols=['property_type',
                                                                    'operation_type'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['departments', 'city'],
                                    transformer=TargetEncoder(cols=['departments',
                                                                    'city'],
                                                              handle_missing='return_nan'))),
                ('trained_model', LGBMRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=0, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000292DA35F9D0>)
2023-05-30 22:07:57,301:INFO:Checking exceptions
2023-05-30 22:07:57,301:INFO:Preloading libraries
2023-05-30 22:07:57,301:INFO:Set up data.
2023-05-30 22:07:57,304:INFO:Set up index.
2023-05-30 22:09:02,113:INFO:Initializing predict_model()
2023-05-30 22:09:02,113:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000292DA29F8B0>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['bedrooms', 'bathrooms'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['departments', 'property_type',
                                             'operation_type', 'city'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerW...operty_type', 'operation_type'],
                                    transformer=OneHotEncoder(cols=['property_type',
                                                                    'operation_type'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['departments', 'city'],
                                    transformer=TargetEncoder(cols=['departments',
                                                                    'city'],
                                                              handle_missing='return_nan'))),
                ('trained_model', LGBMRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=0, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000292DA35F790>)
2023-05-30 22:09:02,113:INFO:Checking exceptions
2023-05-30 22:09:02,113:INFO:Preloading libraries
2023-05-30 22:09:02,113:INFO:Set up data.
2023-05-30 22:09:02,117:INFO:Set up index.
2023-05-30 22:09:09,853:INFO:Initializing predict_model()
2023-05-30 22:09:09,853:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000292DA361820>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['bedrooms', 'bathrooms'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['departments', 'property_type',
                                             'operation_type', 'city'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerW...operty_type', 'operation_type'],
                                    transformer=OneHotEncoder(cols=['property_type',
                                                                    'operation_type'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['departments', 'city'],
                                    transformer=TargetEncoder(cols=['departments',
                                                                    'city'],
                                                              handle_missing='return_nan'))),
                ('trained_model', LGBMRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=0, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000292DA35FEE0>)
2023-05-30 22:09:09,853:INFO:Checking exceptions
2023-05-30 22:09:09,854:INFO:Preloading libraries
2023-05-30 22:09:09,854:INFO:Set up data.
2023-05-30 22:09:09,858:INFO:Set up index.
2023-05-30 22:09:19,289:INFO:Initializing predict_model()
2023-05-30 22:09:19,289:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000292DA29FD90>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['bedrooms', 'bathrooms'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['departments', 'property_type',
                                             'operation_type', 'city'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerW...operty_type', 'operation_type'],
                                    transformer=OneHotEncoder(cols=['property_type',
                                                                    'operation_type'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['departments', 'city'],
                                    transformer=TargetEncoder(cols=['departments',
                                                                    'city'],
                                                              handle_missing='return_nan'))),
                ('trained_model', LGBMRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=0, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000292DA35F820>)
2023-05-30 22:09:19,289:INFO:Checking exceptions
2023-05-30 22:09:19,289:INFO:Preloading libraries
2023-05-30 22:09:19,289:INFO:Set up data.
2023-05-30 22:09:19,295:INFO:Set up index.
2023-05-30 22:09:26,125:INFO:Initializing predict_model()
2023-05-30 22:09:26,125:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000292DA361BB0>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['bedrooms', 'bathrooms'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['departments', 'property_type',
                                             'operation_type', 'city'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerW...operty_type', 'operation_type'],
                                    transformer=OneHotEncoder(cols=['property_type',
                                                                    'operation_type'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['departments', 'city'],
                                    transformer=TargetEncoder(cols=['departments',
                                                                    'city'],
                                                              handle_missing='return_nan'))),
                ('trained_model', LGBMRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=0, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000292DA35F670>)
2023-05-30 22:09:26,125:INFO:Checking exceptions
2023-05-30 22:09:26,125:INFO:Preloading libraries
2023-05-30 22:09:26,125:INFO:Set up data.
2023-05-30 22:09:26,128:INFO:Set up index.
2023-05-30 22:09:34,445:INFO:Initializing predict_model()
2023-05-30 22:09:34,445:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000292DA361F40>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['bedrooms', 'bathrooms'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['departments', 'property_type',
                                             'operation_type', 'city'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerW...operty_type', 'operation_type'],
                                    transformer=OneHotEncoder(cols=['property_type',
                                                                    'operation_type'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['departments', 'city'],
                                    transformer=TargetEncoder(cols=['departments',
                                                                    'city'],
                                                              handle_missing='return_nan'))),
                ('trained_model', LGBMRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=0, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000292DA35F700>)
2023-05-30 22:09:34,445:INFO:Checking exceptions
2023-05-30 22:09:34,445:INFO:Preloading libraries
2023-05-30 22:09:34,446:INFO:Set up data.
2023-05-30 22:09:34,448:INFO:Set up index.
2023-05-30 22:09:56,568:INFO:Initializing predict_model()
2023-05-30 22:09:56,568:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000292DA387670>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['bedrooms', 'bathrooms'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['departments', 'property_type',
                                             'operation_type', 'city'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerW...operty_type', 'operation_type'],
                                    transformer=OneHotEncoder(cols=['property_type',
                                                                    'operation_type'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['departments', 'city'],
                                    transformer=TargetEncoder(cols=['departments',
                                                                    'city'],
                                                              handle_missing='return_nan'))),
                ('trained_model', LGBMRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=0, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000292DA35F8B0>)
2023-05-30 22:09:56,568:INFO:Checking exceptions
2023-05-30 22:09:56,568:INFO:Preloading libraries
2023-05-30 22:09:56,568:INFO:Set up data.
2023-05-30 22:09:56,572:INFO:Set up index.
2023-05-30 22:10:14,123:INFO:Initializing predict_model()
2023-05-30 22:10:14,124:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000292DA387670>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['bedrooms', 'bathrooms'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['departments', 'property_type',
                                             'operation_type', 'city'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerW...operty_type', 'operation_type'],
                                    transformer=OneHotEncoder(cols=['property_type',
                                                                    'operation_type'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['departments', 'city'],
                                    transformer=TargetEncoder(cols=['departments',
                                                                    'city'],
                                                              handle_missing='return_nan'))),
                ('trained_model', LGBMRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=0, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000292DA35F9D0>)
2023-05-30 22:10:14,124:INFO:Checking exceptions
2023-05-30 22:10:14,124:INFO:Preloading libraries
2023-05-30 22:10:14,124:INFO:Set up data.
2023-05-30 22:10:14,127:INFO:Set up index.
2023-05-30 22:10:38,567:INFO:Initializing predict_model()
2023-05-30 22:10:38,567:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000292DA387FD0>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['bedrooms', 'bathrooms'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['departments', 'property_type',
                                             'operation_type', 'city'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerW...operty_type', 'operation_type'],
                                    transformer=OneHotEncoder(cols=['property_type',
                                                                    'operation_type'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['departments', 'city'],
                                    transformer=TargetEncoder(cols=['departments',
                                                                    'city'],
                                                              handle_missing='return_nan'))),
                ('trained_model', LGBMRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=0, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000292DA35F790>)
2023-05-30 22:10:38,567:INFO:Checking exceptions
2023-05-30 22:10:38,567:INFO:Preloading libraries
2023-05-30 22:10:38,567:INFO:Set up data.
2023-05-30 22:10:38,570:INFO:Set up index.
2023-05-30 22:10:54,138:INFO:Initializing predict_model()
2023-05-30 22:10:54,138:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000292DA3879D0>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['bedrooms', 'bathrooms'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['departments', 'property_type',
                                             'operation_type', 'city'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerW...operty_type', 'operation_type'],
                                    transformer=OneHotEncoder(cols=['property_type',
                                                                    'operation_type'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['departments', 'city'],
                                    transformer=TargetEncoder(cols=['departments',
                                                                    'city'],
                                                              handle_missing='return_nan'))),
                ('trained_model', LGBMRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=0, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000292DA35F820>)
2023-05-30 22:10:54,138:INFO:Checking exceptions
2023-05-30 22:10:54,138:INFO:Preloading libraries
2023-05-30 22:10:54,138:INFO:Set up data.
2023-05-30 22:10:54,143:INFO:Set up index.
2023-05-30 22:10:59,817:INFO:Initializing predict_model()
2023-05-30 22:10:59,818:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000292DA387280>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['bedrooms', 'bathrooms'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['departments', 'property_type',
                                             'operation_type', 'city'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerW...operty_type', 'operation_type'],
                                    transformer=OneHotEncoder(cols=['property_type',
                                                                    'operation_type'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['departments', 'city'],
                                    transformer=TargetEncoder(cols=['departments',
                                                                    'city'],
                                                              handle_missing='return_nan'))),
                ('trained_model', LGBMRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=0, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000292DA35F9D0>)
2023-05-30 22:10:59,818:INFO:Checking exceptions
2023-05-30 22:10:59,818:INFO:Preloading libraries
2023-05-30 22:10:59,818:INFO:Set up data.
2023-05-30 22:10:59,823:INFO:Set up index.
2023-05-30 22:11:06,674:INFO:Initializing predict_model()
2023-05-30 22:11:06,674:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000292DA387E50>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['bedrooms', 'bathrooms'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['departments', 'property_type',
                                             'operation_type', 'city'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerW...operty_type', 'operation_type'],
                                    transformer=OneHotEncoder(cols=['property_type',
                                                                    'operation_type'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['departments', 'city'],
                                    transformer=TargetEncoder(cols=['departments',
                                                                    'city'],
                                                              handle_missing='return_nan'))),
                ('trained_model', LGBMRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=0, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000292DA35F790>)
2023-05-30 22:11:06,674:INFO:Checking exceptions
2023-05-30 22:11:06,674:INFO:Preloading libraries
2023-05-30 22:11:06,674:INFO:Set up data.
2023-05-30 22:11:06,678:INFO:Set up index.
2023-05-30 22:11:12,183:INFO:Initializing predict_model()
2023-05-30 22:11:12,183:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000292DA3876A0>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['bedrooms', 'bathrooms'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['departments', 'property_type',
                                             'operation_type', 'city'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerW...operty_type', 'operation_type'],
                                    transformer=OneHotEncoder(cols=['property_type',
                                                                    'operation_type'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['departments', 'city'],
                                    transformer=TargetEncoder(cols=['departments',
                                                                    'city'],
                                                              handle_missing='return_nan'))),
                ('trained_model', LGBMRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=0, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000292DA35F820>)
2023-05-30 22:11:12,183:INFO:Checking exceptions
2023-05-30 22:11:12,183:INFO:Preloading libraries
2023-05-30 22:11:12,184:INFO:Set up data.
2023-05-30 22:11:12,187:INFO:Set up index.
2023-05-30 22:11:21,885:INFO:Initializing predict_model()
2023-05-30 22:11:21,886:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000292DA387E80>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['bedrooms', 'bathrooms'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['departments', 'property_type',
                                             'operation_type', 'city'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerW...operty_type', 'operation_type'],
                                    transformer=OneHotEncoder(cols=['property_type',
                                                                    'operation_type'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['departments', 'city'],
                                    transformer=TargetEncoder(cols=['departments',
                                                                    'city'],
                                                              handle_missing='return_nan'))),
                ('trained_model', LGBMRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=0, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000292DA37D160>)
2023-05-30 22:11:21,886:INFO:Checking exceptions
2023-05-30 22:11:21,886:INFO:Preloading libraries
2023-05-30 22:11:21,886:INFO:Set up data.
2023-05-30 22:11:21,888:INFO:Set up index.
2023-05-30 22:11:28,973:INFO:Initializing predict_model()
2023-05-30 22:11:28,973:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000292DA29FFD0>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['bedrooms', 'bathrooms'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['departments', 'property_type',
                                             'operation_type', 'city'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerW...operty_type', 'operation_type'],
                                    transformer=OneHotEncoder(cols=['property_type',
                                                                    'operation_type'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['departments', 'city'],
                                    transformer=TargetEncoder(cols=['departments',
                                                                    'city'],
                                                              handle_missing='return_nan'))),
                ('trained_model', LGBMRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=0, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000292DA37D1F0>)
2023-05-30 22:11:28,973:INFO:Checking exceptions
2023-05-30 22:11:28,973:INFO:Preloading libraries
2023-05-30 22:11:28,974:INFO:Set up data.
2023-05-30 22:11:28,976:INFO:Set up index.
2023-05-30 22:11:34,456:INFO:Initializing predict_model()
2023-05-30 22:11:34,456:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000292DA29FC10>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['bedrooms', 'bathrooms'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['departments', 'property_type',
                                             'operation_type', 'city'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerW...operty_type', 'operation_type'],
                                    transformer=OneHotEncoder(cols=['property_type',
                                                                    'operation_type'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['departments', 'city'],
                                    transformer=TargetEncoder(cols=['departments',
                                                                    'city'],
                                                              handle_missing='return_nan'))),
                ('trained_model', LGBMRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=0, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000292DA37D040>)
2023-05-30 22:11:34,457:INFO:Checking exceptions
2023-05-30 22:11:34,457:INFO:Preloading libraries
2023-05-30 22:11:34,457:INFO:Set up data.
2023-05-30 22:11:34,460:INFO:Set up index.
2023-05-30 22:11:41,884:INFO:Initializing predict_model()
2023-05-30 22:11:41,884:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000292DA361BB0>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['bedrooms', 'bathrooms'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['departments', 'property_type',
                                             'operation_type', 'city'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerW...operty_type', 'operation_type'],
                                    transformer=OneHotEncoder(cols=['property_type',
                                                                    'operation_type'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['departments', 'city'],
                                    transformer=TargetEncoder(cols=['departments',
                                                                    'city'],
                                                              handle_missing='return_nan'))),
                ('trained_model', LGBMRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=0, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000292DA37D160>)
2023-05-30 22:11:41,884:INFO:Checking exceptions
2023-05-30 22:11:41,884:INFO:Preloading libraries
2023-05-30 22:11:41,885:INFO:Set up data.
2023-05-30 22:11:41,887:INFO:Set up index.
2023-05-30 22:13:09,914:INFO:Initializing predict_model()
2023-05-30 22:13:09,914:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000292DA29F940>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['bedrooms', 'bathrooms'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['departments', 'property_type',
                                             'operation_type', 'city'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerW...operty_type', 'operation_type'],
                                    transformer=OneHotEncoder(cols=['property_type',
                                                                    'operation_type'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['departments', 'city'],
                                    transformer=TargetEncoder(cols=['departments',
                                                                    'city'],
                                                              handle_missing='return_nan'))),
                ('trained_model', LGBMRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=0, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000292DA37D1F0>)
2023-05-30 22:13:09,914:INFO:Checking exceptions
2023-05-30 22:13:09,914:INFO:Preloading libraries
2023-05-30 22:13:09,914:INFO:Set up data.
2023-05-30 22:13:09,916:INFO:Set up index.
2023-05-30 22:13:43,232:INFO:Initializing predict_model()
2023-05-30 22:13:43,232:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000292DA361F10>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['bedrooms', 'bathrooms'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['departments', 'property_type',
                                             'operation_type', 'city'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerW...operty_type', 'operation_type'],
                                    transformer=OneHotEncoder(cols=['property_type',
                                                                    'operation_type'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['departments', 'city'],
                                    transformer=TargetEncoder(cols=['departments',
                                                                    'city'],
                                                              handle_missing='return_nan'))),
                ('trained_model', LGBMRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=0, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000292DA37D040>)
2023-05-30 22:13:43,232:INFO:Checking exceptions
2023-05-30 22:13:43,232:INFO:Preloading libraries
2023-05-30 22:13:43,232:INFO:Set up data.
2023-05-30 22:13:43,235:INFO:Set up index.
2023-05-30 22:14:00,467:INFO:Initializing predict_model()
2023-05-30 22:14:00,468:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000292DA361880>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['bedrooms', 'bathrooms'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['departments', 'property_type',
                                             'operation_type', 'city'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerW...operty_type', 'operation_type'],
                                    transformer=OneHotEncoder(cols=['property_type',
                                                                    'operation_type'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['departments', 'city'],
                                    transformer=TargetEncoder(cols=['departments',
                                                                    'city'],
                                                              handle_missing='return_nan'))),
                ('trained_model', LGBMRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=0, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000292DA37D160>)
2023-05-30 22:14:00,468:INFO:Checking exceptions
2023-05-30 22:14:00,469:INFO:Preloading libraries
2023-05-30 22:14:00,469:INFO:Set up data.
2023-05-30 22:14:00,472:INFO:Set up index.
2023-05-30 22:14:53,853:INFO:Initializing predict_model()
2023-05-30 22:14:53,853:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000292DA3876D0>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['bedrooms', 'bathrooms'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['departments', 'property_type',
                                             'operation_type', 'city'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerW...operty_type', 'operation_type'],
                                    transformer=OneHotEncoder(cols=['property_type',
                                                                    'operation_type'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['departments', 'city'],
                                    transformer=TargetEncoder(cols=['departments',
                                                                    'city'],
                                                              handle_missing='return_nan'))),
                ('trained_model', LGBMRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=0, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000292DA37D1F0>)
2023-05-30 22:14:53,853:INFO:Checking exceptions
2023-05-30 22:14:53,854:INFO:Preloading libraries
2023-05-30 22:14:53,854:INFO:Set up data.
2023-05-30 22:14:53,859:INFO:Set up index.
2023-05-30 22:18:19,869:INFO:Initializing predict_model()
2023-05-30 22:18:19,869:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000292DA3872B0>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['bedrooms', 'bathrooms'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['departments', 'property_type',
                                             'operation_type', 'city'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerW...operty_type', 'operation_type'],
                                    transformer=OneHotEncoder(cols=['property_type',
                                                                    'operation_type'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['departments', 'city'],
                                    transformer=TargetEncoder(cols=['departments',
                                                                    'city'],
                                                              handle_missing='return_nan'))),
                ('trained_model', LGBMRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=0, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000292DA37D040>)
2023-05-30 22:18:19,870:INFO:Checking exceptions
2023-05-30 22:18:19,870:INFO:Preloading libraries
2023-05-30 22:18:19,870:INFO:Set up data.
2023-05-30 22:18:19,873:INFO:Set up index.
2023-05-30 22:18:32,515:INFO:Initializing predict_model()
2023-05-30 22:18:32,515:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000292DA361190>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['bedrooms', 'bathrooms'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['departments', 'property_type',
                                             'operation_type', 'city'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerW...operty_type', 'operation_type'],
                                    transformer=OneHotEncoder(cols=['property_type',
                                                                    'operation_type'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['departments', 'city'],
                                    transformer=TargetEncoder(cols=['departments',
                                                                    'city'],
                                                              handle_missing='return_nan'))),
                ('trained_model', LGBMRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=0, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000292DA37D160>)
2023-05-30 22:18:32,515:INFO:Checking exceptions
2023-05-30 22:18:32,515:INFO:Preloading libraries
2023-05-30 22:18:32,516:INFO:Set up data.
2023-05-30 22:18:32,520:INFO:Set up index.
2023-05-30 22:20:32,054:INFO:Initializing predict_model()
2023-05-30 22:20:32,055:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000292DA29FE80>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['bedrooms', 'bathrooms'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['departments', 'property_type',
                                             'operation_type', 'city'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerW...operty_type', 'operation_type'],
                                    transformer=OneHotEncoder(cols=['property_type',
                                                                    'operation_type'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['departments', 'city'],
                                    transformer=TargetEncoder(cols=['departments',
                                                                    'city'],
                                                              handle_missing='return_nan'))),
                ('trained_model', LGBMRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=0, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000292DA37D1F0>)
2023-05-30 22:20:32,055:INFO:Checking exceptions
2023-05-30 22:20:32,055:INFO:Preloading libraries
2023-05-30 22:20:32,055:INFO:Set up data.
2023-05-30 22:20:32,057:INFO:Set up index.
2023-05-30 22:20:33,511:INFO:Initializing predict_model()
2023-05-30 22:20:33,511:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000292DA3875B0>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['bedrooms', 'bathrooms'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['departments', 'property_type',
                                             'operation_type', 'city'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerW...operty_type', 'operation_type'],
                                    transformer=OneHotEncoder(cols=['property_type',
                                                                    'operation_type'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['departments', 'city'],
                                    transformer=TargetEncoder(cols=['departments',
                                                                    'city'],
                                                              handle_missing='return_nan'))),
                ('trained_model', LGBMRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=0, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000292DA37D040>)
2023-05-30 22:20:33,511:INFO:Checking exceptions
2023-05-30 22:20:33,511:INFO:Preloading libraries
2023-05-30 22:20:33,511:INFO:Set up data.
2023-05-30 22:20:33,514:INFO:Set up index.
2023-05-30 22:20:34,163:INFO:Initializing predict_model()
2023-05-30 22:20:34,163:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000292DA387760>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['bedrooms', 'bathrooms'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['departments', 'property_type',
                                             'operation_type', 'city'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerW...operty_type', 'operation_type'],
                                    transformer=OneHotEncoder(cols=['property_type',
                                                                    'operation_type'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['departments', 'city'],
                                    transformer=TargetEncoder(cols=['departments',
                                                                    'city'],
                                                              handle_missing='return_nan'))),
                ('trained_model', LGBMRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=0, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000292DA37D160>)
2023-05-30 22:20:34,163:INFO:Checking exceptions
2023-05-30 22:20:34,163:INFO:Preloading libraries
2023-05-30 22:20:34,163:INFO:Set up data.
2023-05-30 22:20:34,167:INFO:Set up index.
2023-05-30 22:20:45,004:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-30 22:20:45,004:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-30 22:20:45,004:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-30 22:20:45,004:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-30 22:20:45,827:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-05-30 22:20:46,522:INFO:Initializing load_model()
2023-05-30 22:20:46,522:INFO:load_model(model_name=prediction_model, platform=None, authentication=None, verbose=True)
2023-05-30 22:20:46,597:WARNING:C:\Users\laura\AppData\Local\Programs\Python\Python38\lib\site-packages\pycaret\internal\pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '19.2.3', 'setuptools': '41.2.0', 'pycaret': '3.0.2', 'IPython': '8.12.2', 'ipywidgets': '8.0.6', 'tqdm': '4.65.0', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.2.0', 'sklearn': '1.2.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.28.2', 'matplotlib': '3.7.1', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.14.1', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.5'}, 'python': {'version': '3.8.2', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '23.1.2', 'setuptools': '67.7.2', 'pycaret': '3.0.2', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.65.0', 'numpy': '1.22.4', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.2.0', 'sklearn': '1.2.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.56.4', 'requests': '2.27.1', 'matplotlib': '3.7.1', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.13.1', 'kaleido': '0.2.1', 'statsmodels': '0.13.5', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.5'}, 'python': {'version': '3.10.11', 'machine': 'x86_64'}}
  warnings.warn(

2023-05-30 22:21:11,302:INFO:Initializing predict_model()
2023-05-30 22:21:11,302:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002881BE5B6D0>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['bedrooms', 'bathrooms'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['departments', 'property_type',
                                             'operation_type', 'city'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerW...operty_type', 'operation_type'],
                                    transformer=OneHotEncoder(cols=['property_type',
                                                                    'operation_type'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['departments', 'city'],
                                    transformer=TargetEncoder(cols=['departments',
                                                                    'city'],
                                                              handle_missing='return_nan'))),
                ('trained_model', LGBMRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=0, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002881BE601F0>)
2023-05-30 22:21:11,302:INFO:Checking exceptions
2023-05-30 22:21:11,302:INFO:Preloading libraries
2023-05-30 22:21:11,302:INFO:Set up data.
2023-05-30 22:21:11,306:INFO:Set up index.
2023-05-30 22:22:41,247:INFO:Initializing predict_model()
2023-05-30 22:22:41,247:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002881BE5B070>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['bedrooms', 'bathrooms'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['departments', 'property_type',
                                             'operation_type', 'city'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerW...operty_type', 'operation_type'],
                                    transformer=OneHotEncoder(cols=['property_type',
                                                                    'operation_type'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['departments', 'city'],
                                    transformer=TargetEncoder(cols=['departments',
                                                                    'city'],
                                                              handle_missing='return_nan'))),
                ('trained_model', LGBMRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=0, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002881BEC3700>)
2023-05-30 22:22:41,247:INFO:Checking exceptions
2023-05-30 22:22:41,247:INFO:Preloading libraries
2023-05-30 22:22:41,247:INFO:Set up data.
2023-05-30 22:22:41,254:INFO:Set up index.
2023-05-30 22:22:48,019:INFO:Initializing predict_model()
2023-05-30 22:22:48,020:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002881BE5B460>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['bedrooms', 'bathrooms'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['departments', 'property_type',
                                             'operation_type', 'city'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerW...operty_type', 'operation_type'],
                                    transformer=OneHotEncoder(cols=['property_type',
                                                                    'operation_type'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['departments', 'city'],
                                    transformer=TargetEncoder(cols=['departments',
                                                                    'city'],
                                                              handle_missing='return_nan'))),
                ('trained_model', LGBMRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=0, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002881BEC3280>)
2023-05-30 22:22:48,020:INFO:Checking exceptions
2023-05-30 22:22:48,020:INFO:Preloading libraries
2023-05-30 22:22:48,020:INFO:Set up data.
2023-05-30 22:22:48,023:INFO:Set up index.
2023-05-30 22:22:55,781:INFO:Initializing predict_model()
2023-05-30 22:22:55,781:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002881BE5B0A0>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['bedrooms', 'bathrooms'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['departments', 'property_type',
                                             'operation_type', 'city'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerW...operty_type', 'operation_type'],
                                    transformer=OneHotEncoder(cols=['property_type',
                                                                    'operation_type'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['departments', 'city'],
                                    transformer=TargetEncoder(cols=['departments',
                                                                    'city'],
                                                              handle_missing='return_nan'))),
                ('trained_model', LGBMRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=0, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002881BEC3940>)
2023-05-30 22:22:55,782:INFO:Checking exceptions
2023-05-30 22:22:55,782:INFO:Preloading libraries
2023-05-30 22:22:55,782:INFO:Set up data.
2023-05-30 22:22:55,786:INFO:Set up index.
2023-05-30 22:23:01,488:INFO:Initializing predict_model()
2023-05-30 22:23:01,488:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002881BE5B070>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['bedrooms', 'bathrooms'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['departments', 'property_type',
                                             'operation_type', 'city'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerW...operty_type', 'operation_type'],
                                    transformer=OneHotEncoder(cols=['property_type',
                                                                    'operation_type'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['departments', 'city'],
                                    transformer=TargetEncoder(cols=['departments',
                                                                    'city'],
                                                              handle_missing='return_nan'))),
                ('trained_model', LGBMRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=0, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002881BEC38B0>)
2023-05-30 22:23:01,488:INFO:Checking exceptions
2023-05-30 22:23:01,488:INFO:Preloading libraries
2023-05-30 22:23:01,489:INFO:Set up data.
2023-05-30 22:23:01,494:INFO:Set up index.
2023-05-30 22:23:06,137:INFO:Initializing predict_model()
2023-05-30 22:23:06,137:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002881BE5B040>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['bedrooms', 'bathrooms'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['departments', 'property_type',
                                             'operation_type', 'city'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerW...operty_type', 'operation_type'],
                                    transformer=OneHotEncoder(cols=['property_type',
                                                                    'operation_type'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['departments', 'city'],
                                    transformer=TargetEncoder(cols=['departments',
                                                                    'city'],
                                                              handle_missing='return_nan'))),
                ('trained_model', LGBMRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=0, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002881BEC3790>)
2023-05-30 22:23:06,137:INFO:Checking exceptions
2023-05-30 22:23:06,137:INFO:Preloading libraries
2023-05-30 22:23:06,137:INFO:Set up data.
2023-05-30 22:23:06,140:INFO:Set up index.
2023-05-30 22:23:15,780:INFO:Initializing predict_model()
2023-05-30 22:23:15,780:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002881BD9FDC0>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['bedrooms', 'bathrooms'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['departments', 'property_type',
                                             'operation_type', 'city'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerW...operty_type', 'operation_type'],
                                    transformer=OneHotEncoder(cols=['property_type',
                                                                    'operation_type'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['departments', 'city'],
                                    transformer=TargetEncoder(cols=['departments',
                                                                    'city'],
                                                              handle_missing='return_nan'))),
                ('trained_model', LGBMRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=0, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002881BEC3700>)
2023-05-30 22:23:15,780:INFO:Checking exceptions
2023-05-30 22:23:15,780:INFO:Preloading libraries
2023-05-30 22:23:15,781:INFO:Set up data.
2023-05-30 22:23:15,785:INFO:Set up index.
2023-05-30 22:23:24,282:INFO:Initializing predict_model()
2023-05-30 22:23:24,283:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002881BD9FB20>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['bedrooms', 'bathrooms'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['departments', 'property_type',
                                             'operation_type', 'city'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerW...operty_type', 'operation_type'],
                                    transformer=OneHotEncoder(cols=['property_type',
                                                                    'operation_type'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['departments', 'city'],
                                    transformer=TargetEncoder(cols=['departments',
                                                                    'city'],
                                                              handle_missing='return_nan'))),
                ('trained_model', LGBMRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=0, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002881BEC3790>)
2023-05-30 22:23:24,283:INFO:Checking exceptions
2023-05-30 22:23:24,283:INFO:Preloading libraries
2023-05-30 22:23:24,283:INFO:Set up data.
2023-05-30 22:23:24,287:INFO:Set up index.
2023-05-30 22:23:38,035:INFO:Initializing predict_model()
2023-05-30 22:23:38,035:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002881BE7EB80>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['bedrooms', 'bathrooms'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['departments', 'property_type',
                                             'operation_type', 'city'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerW...operty_type', 'operation_type'],
                                    transformer=OneHotEncoder(cols=['property_type',
                                                                    'operation_type'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['departments', 'city'],
                                    transformer=TargetEncoder(cols=['departments',
                                                                    'city'],
                                                              handle_missing='return_nan'))),
                ('trained_model', LGBMRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=0, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002881BEC38B0>)
2023-05-30 22:23:38,035:INFO:Checking exceptions
2023-05-30 22:23:38,035:INFO:Preloading libraries
2023-05-30 22:23:38,035:INFO:Set up data.
2023-05-30 22:23:38,039:INFO:Set up index.
2023-05-30 22:23:43,571:INFO:Initializing predict_model()
2023-05-30 22:23:43,572:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002881BD9F8E0>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['bedrooms', 'bathrooms'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['departments', 'property_type',
                                             'operation_type', 'city'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerW...operty_type', 'operation_type'],
                                    transformer=OneHotEncoder(cols=['property_type',
                                                                    'operation_type'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['departments', 'city'],
                                    transformer=TargetEncoder(cols=['departments',
                                                                    'city'],
                                                              handle_missing='return_nan'))),
                ('trained_model', LGBMRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=0, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002881BEC34C0>)
2023-05-30 22:23:43,572:INFO:Checking exceptions
2023-05-30 22:23:43,572:INFO:Preloading libraries
2023-05-30 22:23:43,572:INFO:Set up data.
2023-05-30 22:23:43,576:INFO:Set up index.
2023-05-30 22:23:48,753:INFO:Initializing predict_model()
2023-05-30 22:23:48,753:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002881BD9FF40>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['bedrooms', 'bathrooms'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['departments', 'property_type',
                                             'operation_type', 'city'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerW...operty_type', 'operation_type'],
                                    transformer=OneHotEncoder(cols=['property_type',
                                                                    'operation_type'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['departments', 'city'],
                                    transformer=TargetEncoder(cols=['departments',
                                                                    'city'],
                                                              handle_missing='return_nan'))),
                ('trained_model', LGBMRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=0, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002881BEC3940>)
2023-05-30 22:23:48,753:INFO:Checking exceptions
2023-05-30 22:23:48,753:INFO:Preloading libraries
2023-05-30 22:23:48,753:INFO:Set up data.
2023-05-30 22:23:48,756:INFO:Set up index.
2023-05-30 22:23:58,570:INFO:Initializing predict_model()
2023-05-30 22:23:58,571:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002881BD9FD00>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['bedrooms', 'bathrooms'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['departments', 'property_type',
                                             'operation_type', 'city'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerW...operty_type', 'operation_type'],
                                    transformer=OneHotEncoder(cols=['property_type',
                                                                    'operation_type'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['departments', 'city'],
                                    transformer=TargetEncoder(cols=['departments',
                                                                    'city'],
                                                              handle_missing='return_nan'))),
                ('trained_model', LGBMRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=0, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002881BEC3280>)
2023-05-30 22:23:58,571:INFO:Checking exceptions
2023-05-30 22:23:58,571:INFO:Preloading libraries
2023-05-30 22:23:58,572:INFO:Set up data.
2023-05-30 22:23:58,576:INFO:Set up index.
2023-05-30 22:24:06,293:INFO:Initializing predict_model()
2023-05-30 22:24:06,293:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002881BD9FA30>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['bedrooms', 'bathrooms'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['departments', 'property_type',
                                             'operation_type', 'city'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerW...operty_type', 'operation_type'],
                                    transformer=OneHotEncoder(cols=['property_type',
                                                                    'operation_type'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['departments', 'city'],
                                    transformer=TargetEncoder(cols=['departments',
                                                                    'city'],
                                                              handle_missing='return_nan'))),
                ('trained_model', LGBMRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=0, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002881BEC3820>)
2023-05-30 22:24:06,293:INFO:Checking exceptions
2023-05-30 22:24:06,293:INFO:Preloading libraries
2023-05-30 22:24:06,293:INFO:Set up data.
2023-05-30 22:24:06,297:INFO:Set up index.
2023-05-30 22:24:14,722:INFO:Initializing predict_model()
2023-05-30 22:24:14,722:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002881BD9FAC0>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['bedrooms', 'bathrooms'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['departments', 'property_type',
                                             'operation_type', 'city'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerW...operty_type', 'operation_type'],
                                    transformer=OneHotEncoder(cols=['property_type',
                                                                    'operation_type'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['departments', 'city'],
                                    transformer=TargetEncoder(cols=['departments',
                                                                    'city'],
                                                              handle_missing='return_nan'))),
                ('trained_model', LGBMRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=0, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002881BEC3790>)
2023-05-30 22:24:14,723:INFO:Checking exceptions
2023-05-30 22:24:14,723:INFO:Preloading libraries
2023-05-30 22:24:14,723:INFO:Set up data.
2023-05-30 22:24:14,727:INFO:Set up index.
2023-05-30 22:24:23,110:INFO:Initializing predict_model()
2023-05-30 22:24:23,110:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002881BD9FF40>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['bedrooms', 'bathrooms'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['departments', 'property_type',
                                             'operation_type', 'city'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerW...operty_type', 'operation_type'],
                                    transformer=OneHotEncoder(cols=['property_type',
                                                                    'operation_type'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['departments', 'city'],
                                    transformer=TargetEncoder(cols=['departments',
                                                                    'city'],
                                                              handle_missing='return_nan'))),
                ('trained_model', LGBMRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=0, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002881BEC38B0>)
2023-05-30 22:24:23,110:INFO:Checking exceptions
2023-05-30 22:24:23,110:INFO:Preloading libraries
2023-05-30 22:24:23,110:INFO:Set up data.
2023-05-30 22:24:23,114:INFO:Set up index.
2023-05-30 22:24:44,712:INFO:Initializing predict_model()
2023-05-30 22:24:44,713:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002881BD9FAF0>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['bedrooms', 'bathrooms'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['departments', 'property_type',
                                             'operation_type', 'city'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerW...operty_type', 'operation_type'],
                                    transformer=OneHotEncoder(cols=['property_type',
                                                                    'operation_type'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['departments', 'city'],
                                    transformer=TargetEncoder(cols=['departments',
                                                                    'city'],
                                                              handle_missing='return_nan'))),
                ('trained_model', LGBMRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=0, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002881BEC39D0>)
2023-05-30 22:24:44,713:INFO:Checking exceptions
2023-05-30 22:24:44,713:INFO:Preloading libraries
2023-05-30 22:24:44,713:INFO:Set up data.
2023-05-30 22:24:44,717:INFO:Set up index.
2023-05-30 22:24:55,173:INFO:Initializing predict_model()
2023-05-30 22:24:55,173:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002881BD9FA30>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['bedrooms', 'bathrooms'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['departments', 'property_type',
                                             'operation_type', 'city'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerW...operty_type', 'operation_type'],
                                    transformer=OneHotEncoder(cols=['property_type',
                                                                    'operation_type'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['departments', 'city'],
                                    transformer=TargetEncoder(cols=['departments',
                                                                    'city'],
                                                              handle_missing='return_nan'))),
                ('trained_model', LGBMRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=0, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002881BEC3700>)
2023-05-30 22:24:55,173:INFO:Checking exceptions
2023-05-30 22:24:55,173:INFO:Preloading libraries
2023-05-30 22:24:55,174:INFO:Set up data.
2023-05-30 22:24:55,176:INFO:Set up index.
2023-05-30 22:25:02,917:INFO:Initializing predict_model()
2023-05-30 22:25:02,917:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002881BD9FC10>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['bedrooms', 'bathrooms'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['departments', 'property_type',
                                             'operation_type', 'city'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerW...operty_type', 'operation_type'],
                                    transformer=OneHotEncoder(cols=['property_type',
                                                                    'operation_type'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['departments', 'city'],
                                    transformer=TargetEncoder(cols=['departments',
                                                                    'city'],
                                                              handle_missing='return_nan'))),
                ('trained_model', LGBMRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=0, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002881BEC3940>)
2023-05-30 22:25:02,917:INFO:Checking exceptions
2023-05-30 22:25:02,917:INFO:Preloading libraries
2023-05-30 22:25:02,917:INFO:Set up data.
2023-05-30 22:25:02,922:INFO:Set up index.
2023-05-30 22:25:33,691:INFO:Initializing predict_model()
2023-05-30 22:25:33,691:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002881BD9FF40>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['bedrooms', 'bathrooms'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['departments', 'property_type',
                                             'operation_type', 'city'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerW...operty_type', 'operation_type'],
                                    transformer=OneHotEncoder(cols=['property_type',
                                                                    'operation_type'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['departments', 'city'],
                                    transformer=TargetEncoder(cols=['departments',
                                                                    'city'],
                                                              handle_missing='return_nan'))),
                ('trained_model', LGBMRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=0, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002881BEC3280>)
2023-05-30 22:25:33,691:INFO:Checking exceptions
2023-05-30 22:25:33,691:INFO:Preloading libraries
2023-05-30 22:25:33,691:INFO:Set up data.
2023-05-30 22:25:33,694:INFO:Set up index.
2023-05-30 22:25:40,414:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-30 22:25:40,414:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-30 22:25:40,414:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-30 22:25:40,414:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-30 22:25:40,856:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-05-30 22:25:41,222:INFO:Initializing load_model()
2023-05-30 22:25:41,222:INFO:load_model(model_name=prediction_model, platform=None, authentication=None, verbose=True)
2023-05-30 22:25:41,291:WARNING:C:\Users\laura\AppData\Local\Programs\Python\Python38\lib\site-packages\pycaret\internal\pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '19.2.3', 'setuptools': '41.2.0', 'pycaret': '3.0.2', 'IPython': '8.12.2', 'ipywidgets': '8.0.6', 'tqdm': '4.65.0', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.2.0', 'sklearn': '1.2.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.28.2', 'matplotlib': '3.7.1', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.14.1', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.5'}, 'python': {'version': '3.8.2', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '23.1.2', 'setuptools': '67.7.2', 'pycaret': '3.0.2', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.65.0', 'numpy': '1.22.4', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.2.0', 'sklearn': '1.2.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.56.4', 'requests': '2.27.1', 'matplotlib': '3.7.1', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.13.1', 'kaleido': '0.2.1', 'statsmodels': '0.13.5', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.5'}, 'python': {'version': '3.10.11', 'machine': 'x86_64'}}
  warnings.warn(

2023-05-30 22:25:42,077:INFO:Initializing predict_model()
2023-05-30 22:25:42,077:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001B4EF05B700>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['bedrooms', 'bathrooms'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['departments', 'property_type',
                                             'operation_type', 'city'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerW...operty_type', 'operation_type'],
                                    transformer=OneHotEncoder(cols=['property_type',
                                                                    'operation_type'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['departments', 'city'],
                                    transformer=TargetEncoder(cols=['departments',
                                                                    'city'],
                                                              handle_missing='return_nan'))),
                ('trained_model', LGBMRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=0, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001B4EF0621F0>)
2023-05-30 22:25:42,078:INFO:Checking exceptions
2023-05-30 22:25:42,078:INFO:Preloading libraries
2023-05-30 22:25:42,078:INFO:Set up data.
2023-05-30 22:25:42,081:INFO:Set up index.
2023-05-30 22:26:11,584:INFO:Initializing predict_model()
2023-05-30 22:26:11,584:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001B4EF05B1C0>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['bedrooms', 'bathrooms'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['departments', 'property_type',
                                             'operation_type', 'city'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerW...operty_type', 'operation_type'],
                                    transformer=OneHotEncoder(cols=['property_type',
                                                                    'operation_type'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['departments', 'city'],
                                    transformer=TargetEncoder(cols=['departments',
                                                                    'city'],
                                                              handle_missing='return_nan'))),
                ('trained_model', LGBMRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=0, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001B4EF0D0700>)
2023-05-30 22:26:11,584:INFO:Checking exceptions
2023-05-30 22:26:11,584:INFO:Preloading libraries
2023-05-30 22:26:11,585:INFO:Set up data.
2023-05-30 22:26:11,588:INFO:Set up index.
2023-05-30 22:26:49,270:INFO:Initializing predict_model()
2023-05-30 22:26:49,270:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001B4EF05B7C0>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['bedrooms', 'bathrooms'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['departments', 'property_type',
                                             'operation_type', 'city'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerW...operty_type', 'operation_type'],
                                    transformer=OneHotEncoder(cols=['property_type',
                                                                    'operation_type'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['departments', 'city'],
                                    transformer=TargetEncoder(cols=['departments',
                                                                    'city'],
                                                              handle_missing='return_nan'))),
                ('trained_model', LGBMRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=0, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001B4EF0D0280>)
2023-05-30 22:26:49,271:INFO:Checking exceptions
2023-05-30 22:26:49,271:INFO:Preloading libraries
2023-05-30 22:26:49,271:INFO:Set up data.
2023-05-30 22:26:49,274:INFO:Set up index.
2023-05-30 22:27:36,627:INFO:Initializing predict_model()
2023-05-30 22:27:36,627:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001B4EF05B250>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['bedrooms', 'bathrooms'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['departments', 'property_type',
                                             'operation_type', 'city'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerW...operty_type', 'operation_type'],
                                    transformer=OneHotEncoder(cols=['property_type',
                                                                    'operation_type'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['departments', 'city'],
                                    transformer=TargetEncoder(cols=['departments',
                                                                    'city'],
                                                              handle_missing='return_nan'))),
                ('trained_model', LGBMRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=0, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001B4EF0D0940>)
2023-05-30 22:27:36,627:INFO:Checking exceptions
2023-05-30 22:27:36,628:INFO:Preloading libraries
2023-05-30 22:27:36,628:INFO:Set up data.
2023-05-30 22:27:36,630:INFO:Set up index.
2023-05-30 22:27:48,786:INFO:Initializing predict_model()
2023-05-30 22:27:48,786:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001B4EF05B7C0>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['bedrooms', 'bathrooms'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['departments', 'property_type',
                                             'operation_type', 'city'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerW...operty_type', 'operation_type'],
                                    transformer=OneHotEncoder(cols=['property_type',
                                                                    'operation_type'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['departments', 'city'],
                                    transformer=TargetEncoder(cols=['departments',
                                                                    'city'],
                                                              handle_missing='return_nan'))),
                ('trained_model', LGBMRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=0, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001B4EF0D08B0>)
2023-05-30 22:27:48,786:INFO:Checking exceptions
2023-05-30 22:27:48,786:INFO:Preloading libraries
2023-05-30 22:27:48,787:INFO:Set up data.
2023-05-30 22:27:48,791:INFO:Set up index.
2023-05-30 22:28:07,206:INFO:Initializing predict_model()
2023-05-30 22:28:07,206:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001B4EF05B430>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['bedrooms', 'bathrooms'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['departments', 'property_type',
                                             'operation_type', 'city'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerW...operty_type', 'operation_type'],
                                    transformer=OneHotEncoder(cols=['property_type',
                                                                    'operation_type'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['departments', 'city'],
                                    transformer=TargetEncoder(cols=['departments',
                                                                    'city'],
                                                              handle_missing='return_nan'))),
                ('trained_model', LGBMRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=0, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001B4EF0D0790>)
2023-05-30 22:28:07,206:INFO:Checking exceptions
2023-05-30 22:28:07,206:INFO:Preloading libraries
2023-05-30 22:28:07,206:INFO:Set up data.
2023-05-30 22:28:07,209:INFO:Set up index.
2023-05-30 22:28:59,109:INFO:Initializing predict_model()
2023-05-30 22:28:59,109:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001B4EEF9FA60>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['bedrooms', 'bathrooms'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['departments', 'property_type',
                                             'operation_type', 'city'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerW...operty_type', 'operation_type'],
                                    transformer=OneHotEncoder(cols=['property_type',
                                                                    'operation_type'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['departments', 'city'],
                                    transformer=TargetEncoder(cols=['departments',
                                                                    'city'],
                                                              handle_missing='return_nan'))),
                ('trained_model', LGBMRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=0, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001B4EF0D0700>)
2023-05-30 22:28:59,109:INFO:Checking exceptions
2023-05-30 22:28:59,109:INFO:Preloading libraries
2023-05-30 22:28:59,109:INFO:Set up data.
2023-05-30 22:28:59,113:INFO:Set up index.
2023-05-30 22:29:14,130:INFO:Initializing predict_model()
2023-05-30 22:29:14,130:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001B4EF077C40>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['bedrooms', 'bathrooms'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['departments', 'property_type',
                                             'operation_type', 'city'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerW...operty_type', 'operation_type'],
                                    transformer=OneHotEncoder(cols=['property_type',
                                                                    'operation_type'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['departments', 'city'],
                                    transformer=TargetEncoder(cols=['departments',
                                                                    'city'],
                                                              handle_missing='return_nan'))),
                ('trained_model', LGBMRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=0, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001B4EF0D0280>)
2023-05-30 22:29:14,130:INFO:Checking exceptions
2023-05-30 22:29:14,130:INFO:Preloading libraries
2023-05-30 22:29:14,130:INFO:Set up data.
2023-05-30 22:29:14,134:INFO:Set up index.
2023-05-30 22:29:33,480:INFO:Initializing predict_model()
2023-05-30 22:29:33,480:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001B4EF077AC0>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['bedrooms', 'bathrooms'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['departments', 'property_type',
                                             'operation_type', 'city'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerW...operty_type', 'operation_type'],
                                    transformer=OneHotEncoder(cols=['property_type',
                                                                    'operation_type'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['departments', 'city'],
                                    transformer=TargetEncoder(cols=['departments',
                                                                    'city'],
                                                              handle_missing='return_nan'))),
                ('trained_model', LGBMRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=0, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001B4EF0D0940>)
2023-05-30 22:29:33,480:INFO:Checking exceptions
2023-05-30 22:29:33,480:INFO:Preloading libraries
2023-05-30 22:29:33,480:INFO:Set up data.
2023-05-30 22:29:33,483:INFO:Set up index.
2023-05-30 22:29:43,322:INFO:Initializing predict_model()
2023-05-30 22:29:43,322:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001B4EEF9FC70>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['bedrooms', 'bathrooms'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['departments', 'property_type',
                                             'operation_type', 'city'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerW...operty_type', 'operation_type'],
                                    transformer=OneHotEncoder(cols=['property_type',
                                                                    'operation_type'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['departments', 'city'],
                                    transformer=TargetEncoder(cols=['departments',
                                                                    'city'],
                                                              handle_missing='return_nan'))),
                ('trained_model', LGBMRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=0, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001B4EF0D0790>)
2023-05-30 22:29:43,322:INFO:Checking exceptions
2023-05-30 22:29:43,323:INFO:Preloading libraries
2023-05-30 22:29:43,323:INFO:Set up data.
2023-05-30 22:29:43,325:INFO:Set up index.
2023-05-30 22:29:53,079:INFO:Initializing predict_model()
2023-05-30 22:29:53,079:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001B4EEF9FE50>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['bedrooms', 'bathrooms'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['departments', 'property_type',
                                             'operation_type', 'city'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerW...operty_type', 'operation_type'],
                                    transformer=OneHotEncoder(cols=['property_type',
                                                                    'operation_type'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['departments', 'city'],
                                    transformer=TargetEncoder(cols=['departments',
                                                                    'city'],
                                                              handle_missing='return_nan'))),
                ('trained_model', LGBMRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=0, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001B4EF0D0820>)
2023-05-30 22:29:53,079:INFO:Checking exceptions
2023-05-30 22:29:53,079:INFO:Preloading libraries
2023-05-30 22:29:53,079:INFO:Set up data.
2023-05-30 22:29:53,083:INFO:Set up index.
2023-05-30 22:30:28,347:INFO:Initializing predict_model()
2023-05-30 22:30:28,348:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001B4EEF9FF70>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['bedrooms', 'bathrooms'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['departments', 'property_type',
                                             'operation_type', 'city'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerW...operty_type', 'operation_type'],
                                    transformer=OneHotEncoder(cols=['property_type',
                                                                    'operation_type'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['departments', 'city'],
                                    transformer=TargetEncoder(cols=['departments',
                                                                    'city'],
                                                              handle_missing='return_nan'))),
                ('trained_model', LGBMRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=0, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001B4EF0D08B0>)
2023-05-30 22:30:28,348:INFO:Checking exceptions
2023-05-30 22:30:28,348:INFO:Preloading libraries
2023-05-30 22:30:28,348:INFO:Set up data.
2023-05-30 22:30:28,351:INFO:Set up index.
2023-05-30 22:30:37,186:INFO:Initializing predict_model()
2023-05-30 22:30:37,187:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001B4EEF9F070>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['bedrooms', 'bathrooms'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['departments', 'property_type',
                                             'operation_type', 'city'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerW...operty_type', 'operation_type'],
                                    transformer=OneHotEncoder(cols=['property_type',
                                                                    'operation_type'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['departments', 'city'],
                                    transformer=TargetEncoder(cols=['departments',
                                                                    'city'],
                                                              handle_missing='return_nan'))),
                ('trained_model', LGBMRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=0, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001B4EF0D0280>)
2023-05-30 22:30:37,187:INFO:Checking exceptions
2023-05-30 22:30:37,187:INFO:Preloading libraries
2023-05-30 22:30:37,187:INFO:Set up data.
2023-05-30 22:30:37,189:INFO:Set up index.
2023-05-30 22:31:33,620:INFO:Initializing predict_model()
2023-05-30 22:31:33,620:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001B4EEF9F910>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['bedrooms', 'bathrooms'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['departments', 'property_type',
                                             'operation_type', 'city'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerW...operty_type', 'operation_type'],
                                    transformer=OneHotEncoder(cols=['property_type',
                                                                    'operation_type'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['departments', 'city'],
                                    transformer=TargetEncoder(cols=['departments',
                                                                    'city'],
                                                              handle_missing='return_nan'))),
                ('trained_model', LGBMRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=0, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001B4EF0D0700>)
2023-05-30 22:31:33,620:INFO:Checking exceptions
2023-05-30 22:31:33,620:INFO:Preloading libraries
2023-05-30 22:31:33,620:INFO:Set up data.
2023-05-30 22:31:33,623:INFO:Set up index.
2023-05-30 22:31:53,959:INFO:Initializing predict_model()
2023-05-30 22:31:53,959:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001B4EF077430>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['bedrooms', 'bathrooms'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['departments', 'property_type',
                                             'operation_type', 'city'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerW...operty_type', 'operation_type'],
                                    transformer=OneHotEncoder(cols=['property_type',
                                                                    'operation_type'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['departments', 'city'],
                                    transformer=TargetEncoder(cols=['departments',
                                                                    'city'],
                                                              handle_missing='return_nan'))),
                ('trained_model', LGBMRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=0, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001B4EF0D0790>)
2023-05-30 22:31:53,959:INFO:Checking exceptions
2023-05-30 22:31:53,959:INFO:Preloading libraries
2023-05-30 22:31:53,960:INFO:Set up data.
2023-05-30 22:31:53,963:INFO:Set up index.
2023-05-30 22:32:03,422:INFO:Initializing predict_model()
2023-05-30 22:32:03,423:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001B4EF077A00>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['bedrooms', 'bathrooms'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['departments', 'property_type',
                                             'operation_type', 'city'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerW...operty_type', 'operation_type'],
                                    transformer=OneHotEncoder(cols=['property_type',
                                                                    'operation_type'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['departments', 'city'],
                                    transformer=TargetEncoder(cols=['departments',
                                                                    'city'],
                                                              handle_missing='return_nan'))),
                ('trained_model', LGBMRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=0, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001B4EF0D09D0>)
2023-05-30 22:32:03,423:INFO:Checking exceptions
2023-05-30 22:32:03,423:INFO:Preloading libraries
2023-05-30 22:32:03,423:INFO:Set up data.
2023-05-30 22:32:03,425:INFO:Set up index.
2023-05-30 22:32:50,490:INFO:Initializing predict_model()
2023-05-30 22:32:50,490:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001B4EF05B100>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['bedrooms', 'bathrooms'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['departments', 'property_type',
                                             'operation_type', 'city'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerW...operty_type', 'operation_type'],
                                    transformer=OneHotEncoder(cols=['property_type',
                                                                    'operation_type'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['departments', 'city'],
                                    transformer=TargetEncoder(cols=['departments',
                                                                    'city'],
                                                              handle_missing='return_nan'))),
                ('trained_model', LGBMRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=0, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001B4EF0D0940>)
2023-05-30 22:32:50,490:INFO:Checking exceptions
2023-05-30 22:32:50,490:INFO:Preloading libraries
2023-05-30 22:32:50,490:INFO:Set up data.
2023-05-30 22:32:50,495:INFO:Set up index.
2023-05-30 22:33:02,471:INFO:Initializing predict_model()
2023-05-30 22:33:02,471:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001B4EF077430>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['bedrooms', 'bathrooms'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['departments', 'property_type',
                                             'operation_type', 'city'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerW...operty_type', 'operation_type'],
                                    transformer=OneHotEncoder(cols=['property_type',
                                                                    'operation_type'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['departments', 'city'],
                                    transformer=TargetEncoder(cols=['departments',
                                                                    'city'],
                                                              handle_missing='return_nan'))),
                ('trained_model', LGBMRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=0, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001B4EF0D08B0>)
2023-05-30 22:33:02,472:INFO:Checking exceptions
2023-05-30 22:33:02,472:INFO:Preloading libraries
2023-05-30 22:33:02,472:INFO:Set up data.
2023-05-30 22:33:02,475:INFO:Set up index.
2023-05-30 22:33:08,949:INFO:Initializing predict_model()
2023-05-30 22:33:08,949:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001B4EF077610>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['bedrooms', 'bathrooms'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['departments', 'property_type',
                                             'operation_type', 'city'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerW...operty_type', 'operation_type'],
                                    transformer=OneHotEncoder(cols=['property_type',
                                                                    'operation_type'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['departments', 'city'],
                                    transformer=TargetEncoder(cols=['departments',
                                                                    'city'],
                                                              handle_missing='return_nan'))),
                ('trained_model', LGBMRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=0, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001B4EF0D0280>)
2023-05-30 22:33:08,949:INFO:Checking exceptions
2023-05-30 22:33:08,949:INFO:Preloading libraries
2023-05-30 22:33:08,949:INFO:Set up data.
2023-05-30 22:33:08,953:INFO:Set up index.
2023-05-30 22:33:20,773:INFO:Initializing predict_model()
2023-05-30 22:33:20,773:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001B4EF077880>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['bedrooms', 'bathrooms'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['departments', 'property_type',
                                             'operation_type', 'city'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerW...operty_type', 'operation_type'],
                                    transformer=OneHotEncoder(cols=['property_type',
                                                                    'operation_type'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['departments', 'city'],
                                    transformer=TargetEncoder(cols=['departments',
                                                                    'city'],
                                                              handle_missing='return_nan'))),
                ('trained_model', LGBMRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=0, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001B4EF0D0700>)
2023-05-30 22:33:20,773:INFO:Checking exceptions
2023-05-30 22:33:20,773:INFO:Preloading libraries
2023-05-30 22:33:20,773:INFO:Set up data.
2023-05-30 22:33:20,776:INFO:Set up index.
2023-05-30 22:33:26,213:INFO:Initializing predict_model()
2023-05-30 22:33:26,213:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001B4EF077340>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['bedrooms', 'bathrooms'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['departments', 'property_type',
                                             'operation_type', 'city'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerW...operty_type', 'operation_type'],
                                    transformer=OneHotEncoder(cols=['property_type',
                                                                    'operation_type'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['departments', 'city'],
                                    transformer=TargetEncoder(cols=['departments',
                                                                    'city'],
                                                              handle_missing='return_nan'))),
                ('trained_model', LGBMRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=0, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001B4EF0D0790>)
2023-05-30 22:33:26,214:INFO:Checking exceptions
2023-05-30 22:33:26,214:INFO:Preloading libraries
2023-05-30 22:33:26,214:INFO:Set up data.
2023-05-30 22:33:26,217:INFO:Set up index.
2023-05-30 22:33:33,982:INFO:Initializing predict_model()
2023-05-30 22:33:33,983:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001B4EEF9FB50>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['bedrooms', 'bathrooms'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['departments', 'property_type',
                                             'operation_type', 'city'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerW...operty_type', 'operation_type'],
                                    transformer=OneHotEncoder(cols=['property_type',
                                                                    'operation_type'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['departments', 'city'],
                                    transformer=TargetEncoder(cols=['departments',
                                                                    'city'],
                                                              handle_missing='return_nan'))),
                ('trained_model', LGBMRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=0, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001B4EF0D09D0>)
2023-05-30 22:33:33,983:INFO:Checking exceptions
2023-05-30 22:33:33,983:INFO:Preloading libraries
2023-05-30 22:33:33,983:INFO:Set up data.
2023-05-30 22:33:33,986:INFO:Set up index.
2023-05-30 22:33:50,483:INFO:Initializing predict_model()
2023-05-30 22:33:50,483:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001B4EEF9F970>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['bedrooms', 'bathrooms'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['departments', 'property_type',
                                             'operation_type', 'city'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerW...operty_type', 'operation_type'],
                                    transformer=OneHotEncoder(cols=['property_type',
                                                                    'operation_type'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['departments', 'city'],
                                    transformer=TargetEncoder(cols=['departments',
                                                                    'city'],
                                                              handle_missing='return_nan'))),
                ('trained_model', LGBMRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=0, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001B4EF0D0940>)
2023-05-30 22:33:50,483:INFO:Checking exceptions
2023-05-30 22:33:50,484:INFO:Preloading libraries
2023-05-30 22:33:50,484:INFO:Set up data.
2023-05-30 22:33:50,487:INFO:Set up index.
2023-05-30 22:33:52,873:INFO:Initializing predict_model()
2023-05-30 22:33:52,874:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001B4EEF9FBE0>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['bedrooms', 'bathrooms'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['departments', 'property_type',
                                             'operation_type', 'city'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerW...operty_type', 'operation_type'],
                                    transformer=OneHotEncoder(cols=['property_type',
                                                                    'operation_type'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['departments', 'city'],
                                    transformer=TargetEncoder(cols=['departments',
                                                                    'city'],
                                                              handle_missing='return_nan'))),
                ('trained_model', LGBMRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=0, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001B4EF0D08B0>)
2023-05-30 22:33:52,874:INFO:Checking exceptions
2023-05-30 22:33:52,874:INFO:Preloading libraries
2023-05-30 22:33:52,874:INFO:Set up data.
2023-05-30 22:33:52,876:INFO:Set up index.
2023-05-30 22:34:05,891:INFO:Initializing predict_model()
2023-05-30 22:34:05,891:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001B4EEF9F8B0>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['bedrooms', 'bathrooms'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['departments', 'property_type',
                                             'operation_type', 'city'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerW...operty_type', 'operation_type'],
                                    transformer=OneHotEncoder(cols=['property_type',
                                                                    'operation_type'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['departments', 'city'],
                                    transformer=TargetEncoder(cols=['departments',
                                                                    'city'],
                                                              handle_missing='return_nan'))),
                ('trained_model', LGBMRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=0, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001B4EF0D0280>)
2023-05-30 22:34:05,891:INFO:Checking exceptions
2023-05-30 22:34:05,891:INFO:Preloading libraries
2023-05-30 22:34:05,891:INFO:Set up data.
2023-05-30 22:34:05,895:INFO:Set up index.
2023-05-30 22:34:16,107:INFO:Initializing predict_model()
2023-05-30 22:34:16,107:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001B4EEF9FAF0>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['bedrooms', 'bathrooms'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['departments', 'property_type',
                                             'operation_type', 'city'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerW...operty_type', 'operation_type'],
                                    transformer=OneHotEncoder(cols=['property_type',
                                                                    'operation_type'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['departments', 'city'],
                                    transformer=TargetEncoder(cols=['departments',
                                                                    'city'],
                                                              handle_missing='return_nan'))),
                ('trained_model', LGBMRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=0, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001B4EF0D0700>)
2023-05-30 22:34:16,107:INFO:Checking exceptions
2023-05-30 22:34:16,107:INFO:Preloading libraries
2023-05-30 22:34:16,107:INFO:Set up data.
2023-05-30 22:34:16,110:INFO:Set up index.
2023-05-30 22:34:26,687:INFO:Initializing predict_model()
2023-05-30 22:34:26,688:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001B4EEF9FA00>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['bedrooms', 'bathrooms'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['departments', 'property_type',
                                             'operation_type', 'city'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerW...operty_type', 'operation_type'],
                                    transformer=OneHotEncoder(cols=['property_type',
                                                                    'operation_type'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['departments', 'city'],
                                    transformer=TargetEncoder(cols=['departments',
                                                                    'city'],
                                                              handle_missing='return_nan'))),
                ('trained_model', LGBMRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=0, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001B4EF0D0280>)
2023-05-30 22:34:26,688:INFO:Checking exceptions
2023-05-30 22:34:26,688:INFO:Preloading libraries
2023-05-30 22:34:26,689:INFO:Set up data.
2023-05-30 22:34:26,692:INFO:Set up index.
2023-05-30 22:35:59,671:INFO:Initializing predict_model()
2023-05-30 22:35:59,671:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001B4EF0779A0>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['bedrooms', 'bathrooms'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['departments', 'property_type',
                                             'operation_type', 'city'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerW...operty_type', 'operation_type'],
                                    transformer=OneHotEncoder(cols=['property_type',
                                                                    'operation_type'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['departments', 'city'],
                                    transformer=TargetEncoder(cols=['departments',
                                                                    'city'],
                                                              handle_missing='return_nan'))),
                ('trained_model', LGBMRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=0, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001B4EF0D09D0>)
2023-05-30 22:35:59,671:INFO:Checking exceptions
2023-05-30 22:35:59,671:INFO:Preloading libraries
2023-05-30 22:35:59,671:INFO:Set up data.
2023-05-30 22:35:59,674:INFO:Set up index.
2023-05-30 22:36:07,091:INFO:Initializing predict_model()
2023-05-30 22:36:07,091:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001B4EF05B190>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['bedrooms', 'bathrooms'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['departments', 'property_type',
                                             'operation_type', 'city'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerW...operty_type', 'operation_type'],
                                    transformer=OneHotEncoder(cols=['property_type',
                                                                    'operation_type'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['departments', 'city'],
                                    transformer=TargetEncoder(cols=['departments',
                                                                    'city'],
                                                              handle_missing='return_nan'))),
                ('trained_model', LGBMRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=0, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001B4EF0D0790>)
2023-05-30 22:36:07,092:INFO:Checking exceptions
2023-05-30 22:36:07,092:INFO:Preloading libraries
2023-05-30 22:36:07,092:INFO:Set up data.
2023-05-30 22:36:07,095:INFO:Set up index.
2023-05-30 22:36:13,558:INFO:Initializing predict_model()
2023-05-30 22:36:13,559:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001B4EEF9FCD0>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['bedrooms', 'bathrooms'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['departments', 'property_type',
                                             'operation_type', 'city'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerW...operty_type', 'operation_type'],
                                    transformer=OneHotEncoder(cols=['property_type',
                                                                    'operation_type'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['departments', 'city'],
                                    transformer=TargetEncoder(cols=['departments',
                                                                    'city'],
                                                              handle_missing='return_nan'))),
                ('trained_model', LGBMRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=0, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001B4EF0D08B0>)
2023-05-30 22:36:13,559:INFO:Checking exceptions
2023-05-30 22:36:13,559:INFO:Preloading libraries
2023-05-30 22:36:13,559:INFO:Set up data.
2023-05-30 22:36:13,564:INFO:Set up index.
2023-05-30 22:36:22,411:INFO:Initializing predict_model()
2023-05-30 22:36:22,411:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001B4EF05BDF0>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['bedrooms', 'bathrooms'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['departments', 'property_type',
                                             'operation_type', 'city'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerW...operty_type', 'operation_type'],
                                    transformer=OneHotEncoder(cols=['property_type',
                                                                    'operation_type'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['departments', 'city'],
                                    transformer=TargetEncoder(cols=['departments',
                                                                    'city'],
                                                              handle_missing='return_nan'))),
                ('trained_model', LGBMRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=0, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001B4EF0D0700>)
2023-05-30 22:36:22,411:INFO:Checking exceptions
2023-05-30 22:36:22,411:INFO:Preloading libraries
2023-05-30 22:36:22,411:INFO:Set up data.
2023-05-30 22:36:22,414:INFO:Set up index.
2023-05-30 22:36:30,796:INFO:Initializing predict_model()
2023-05-30 22:36:30,796:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001B4EEF9FA30>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['bedrooms', 'bathrooms'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['departments', 'property_type',
                                             'operation_type', 'city'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerW...operty_type', 'operation_type'],
                                    transformer=OneHotEncoder(cols=['property_type',
                                                                    'operation_type'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['departments', 'city'],
                                    transformer=TargetEncoder(cols=['departments',
                                                                    'city'],
                                                              handle_missing='return_nan'))),
                ('trained_model', LGBMRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=0, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001B4EF0D0940>)
2023-05-30 22:36:30,797:INFO:Checking exceptions
2023-05-30 22:36:30,797:INFO:Preloading libraries
2023-05-30 22:36:30,797:INFO:Set up data.
2023-05-30 22:36:30,801:INFO:Set up index.
2023-05-30 22:42:24,475:INFO:Initializing predict_model()
2023-05-30 22:42:24,475:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001B4EF05B6D0>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['bedrooms', 'bathrooms'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['departments', 'property_type',
                                             'operation_type', 'city'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerW...operty_type', 'operation_type'],
                                    transformer=OneHotEncoder(cols=['property_type',
                                                                    'operation_type'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['departments', 'city'],
                                    transformer=TargetEncoder(cols=['departments',
                                                                    'city'],
                                                              handle_missing='return_nan'))),
                ('trained_model', LGBMRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=0, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001B4EF0D0790>)
2023-05-30 22:42:24,475:INFO:Checking exceptions
2023-05-30 22:42:24,475:INFO:Preloading libraries
2023-05-30 22:42:24,476:INFO:Set up data.
2023-05-30 22:42:24,481:INFO:Set up index.
2023-05-30 23:11:02,221:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-30 23:11:02,221:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-30 23:11:02,221:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-30 23:11:02,221:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-30 23:11:02,949:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-05-30 23:11:03,572:INFO:Initializing load_model()
2023-05-30 23:11:03,572:INFO:load_model(model_name=prediction_model, platform=None, authentication=None, verbose=True)
2023-05-30 23:11:03,653:WARNING:C:\Users\laura\AppData\Local\Programs\Python\Python38\lib\site-packages\pycaret\internal\pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '19.2.3', 'setuptools': '41.2.0', 'pycaret': '3.0.2', 'IPython': '8.12.2', 'ipywidgets': '8.0.6', 'tqdm': '4.65.0', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.2.0', 'sklearn': '1.2.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.28.2', 'matplotlib': '3.7.1', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.14.1', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.5'}, 'python': {'version': '3.8.2', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '23.1.2', 'setuptools': '67.7.2', 'pycaret': '3.0.2', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.65.0', 'numpy': '1.22.4', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.2.0', 'sklearn': '1.2.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.56.4', 'requests': '2.27.1', 'matplotlib': '3.7.1', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.13.1', 'kaleido': '0.2.1', 'statsmodels': '0.13.5', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.5'}, 'python': {'version': '3.10.11', 'machine': 'x86_64'}}
  warnings.warn(

2023-05-30 23:11:05,350:INFO:Initializing predict_model()
2023-05-30 23:11:05,350:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000015D73F9D5B0>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['bedrooms', 'bathrooms'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['departments', 'property_type',
                                             'operation_type', 'city'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerW...operty_type', 'operation_type'],
                                    transformer=OneHotEncoder(cols=['property_type',
                                                                    'operation_type'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['departments', 'city'],
                                    transformer=TargetEncoder(cols=['departments',
                                                                    'city'],
                                                              handle_missing='return_nan'))),
                ('trained_model', LGBMRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=0, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000015D73FA01F0>)
2023-05-30 23:11:05,350:INFO:Checking exceptions
2023-05-30 23:11:05,350:INFO:Preloading libraries
2023-05-30 23:11:05,350:INFO:Set up data.
2023-05-30 23:11:05,353:INFO:Set up index.
2023-05-30 23:11:54,017:INFO:Initializing predict_model()
2023-05-30 23:11:54,017:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000015D73F74310>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['bedrooms', 'bathrooms'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['departments', 'property_type',
                                             'operation_type', 'city'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerW...operty_type', 'operation_type'],
                                    transformer=OneHotEncoder(cols=['property_type',
                                                                    'operation_type'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['departments', 'city'],
                                    transformer=TargetEncoder(cols=['departments',
                                                                    'city'],
                                                              handle_missing='return_nan'))),
                ('trained_model', LGBMRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=0, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000015D73F53430>)
2023-05-30 23:11:54,017:INFO:Checking exceptions
2023-05-30 23:11:54,017:INFO:Preloading libraries
2023-05-30 23:11:54,017:INFO:Set up data.
2023-05-30 23:11:54,019:INFO:Set up index.
2023-05-30 23:12:04,235:INFO:Initializing predict_model()
2023-05-30 23:12:04,235:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000015D73F9D700>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['bedrooms', 'bathrooms'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['departments', 'property_type',
                                             'operation_type', 'city'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerW...operty_type', 'operation_type'],
                                    transformer=OneHotEncoder(cols=['property_type',
                                                                    'operation_type'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['departments', 'city'],
                                    transformer=TargetEncoder(cols=['departments',
                                                                    'city'],
                                                              handle_missing='return_nan'))),
                ('trained_model', LGBMRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=0, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000015D7400E8B0>)
2023-05-30 23:12:04,236:INFO:Checking exceptions
2023-05-30 23:12:04,236:INFO:Preloading libraries
2023-05-30 23:12:04,236:INFO:Set up data.
2023-05-30 23:12:04,240:INFO:Set up index.
2023-05-30 23:13:02,991:INFO:Initializing predict_model()
2023-05-30 23:13:02,991:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000015D73F9D370>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['bedrooms', 'bathrooms'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['departments', 'property_type',
                                             'operation_type', 'city'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerW...operty_type', 'operation_type'],
                                    transformer=OneHotEncoder(cols=['property_type',
                                                                    'operation_type'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['departments', 'city'],
                                    transformer=TargetEncoder(cols=['departments',
                                                                    'city'],
                                                              handle_missing='return_nan'))),
                ('trained_model', LGBMRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=0, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000015D7400E430>)
2023-05-30 23:13:02,991:INFO:Checking exceptions
2023-05-30 23:13:02,991:INFO:Preloading libraries
2023-05-30 23:13:02,992:INFO:Set up data.
2023-05-30 23:13:02,995:INFO:Set up index.
2023-05-30 23:14:23,412:INFO:Initializing predict_model()
2023-05-30 23:14:23,413:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000015D73EDF0A0>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['bedrooms', 'bathrooms'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['departments', 'property_type',
                                             'operation_type', 'city'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerW...operty_type', 'operation_type'],
                                    transformer=OneHotEncoder(cols=['property_type',
                                                                    'operation_type'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['departments', 'city'],
                                    transformer=TargetEncoder(cols=['departments',
                                                                    'city'],
                                                              handle_missing='return_nan'))),
                ('trained_model', LGBMRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=0, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000015D7400E430>)
2023-05-30 23:14:23,413:INFO:Checking exceptions
2023-05-30 23:14:23,413:INFO:Preloading libraries
2023-05-30 23:14:23,413:INFO:Set up data.
2023-05-30 23:14:23,417:INFO:Set up index.
2023-05-30 23:16:18,916:INFO:Initializing predict_model()
2023-05-30 23:16:18,916:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000015D73EDF9A0>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['bedrooms', 'bathrooms'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['departments', 'property_type',
                                             'operation_type', 'city'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerW...operty_type', 'operation_type'],
                                    transformer=OneHotEncoder(cols=['property_type',
                                                                    'operation_type'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['departments', 'city'],
                                    transformer=TargetEncoder(cols=['departments',
                                                                    'city'],
                                                              handle_missing='return_nan'))),
                ('trained_model', LGBMRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=0, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000015D7400E670>)
2023-05-30 23:16:18,916:INFO:Checking exceptions
2023-05-30 23:16:18,916:INFO:Preloading libraries
2023-05-30 23:16:18,916:INFO:Set up data.
2023-05-30 23:16:18,920:INFO:Set up index.
2023-05-30 23:20:17,076:INFO:Initializing predict_model()
2023-05-30 23:20:17,076:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000015D73EDFB50>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['bedrooms', 'bathrooms'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['departments', 'property_type',
                                             'operation_type', 'city'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerW...operty_type', 'operation_type'],
                                    transformer=OneHotEncoder(cols=['property_type',
                                                                    'operation_type'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['departments', 'city'],
                                    transformer=TargetEncoder(cols=['departments',
                                                                    'city'],
                                                              handle_missing='return_nan'))),
                ('trained_model', LGBMRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=0, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000015D7400E430>)
2023-05-30 23:20:17,077:INFO:Checking exceptions
2023-05-30 23:20:17,077:INFO:Preloading libraries
2023-05-30 23:20:17,077:INFO:Set up data.
2023-05-30 23:20:17,079:INFO:Set up index.
2023-05-30 23:20:38,551:INFO:Initializing predict_model()
2023-05-30 23:20:38,552:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000015D73EDFCA0>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['bedrooms', 'bathrooms'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['departments', 'property_type',
                                             'operation_type', 'city'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerW...operty_type', 'operation_type'],
                                    transformer=OneHotEncoder(cols=['property_type',
                                                                    'operation_type'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['departments', 'city'],
                                    transformer=TargetEncoder(cols=['departments',
                                                                    'city'],
                                                              handle_missing='return_nan'))),
                ('trained_model', LGBMRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=0, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000015D7400E670>)
2023-05-30 23:20:38,552:INFO:Checking exceptions
2023-05-30 23:20:38,552:INFO:Preloading libraries
2023-05-30 23:20:38,552:INFO:Set up data.
2023-05-30 23:20:38,556:INFO:Set up index.
2023-05-30 23:20:46,380:INFO:Initializing predict_model()
2023-05-30 23:20:46,380:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000015D73EDF8E0>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['bedrooms', 'bathrooms'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['departments', 'property_type',
                                             'operation_type', 'city'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerW...operty_type', 'operation_type'],
                                    transformer=OneHotEncoder(cols=['property_type',
                                                                    'operation_type'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['departments', 'city'],
                                    transformer=TargetEncoder(cols=['departments',
                                                                    'city'],
                                                              handle_missing='return_nan'))),
                ('trained_model', LGBMRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=0, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000015D7400E430>)
2023-05-30 23:20:46,380:INFO:Checking exceptions
2023-05-30 23:20:46,380:INFO:Preloading libraries
2023-05-30 23:20:46,381:INFO:Set up data.
2023-05-30 23:20:46,384:INFO:Set up index.
2023-05-30 23:21:09,104:INFO:Initializing predict_model()
2023-05-30 23:21:09,104:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000015D73EDFBB0>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['bedrooms', 'bathrooms'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['departments', 'property_type',
                                             'operation_type', 'city'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerW...operty_type', 'operation_type'],
                                    transformer=OneHotEncoder(cols=['property_type',
                                                                    'operation_type'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['departments', 'city'],
                                    transformer=TargetEncoder(cols=['departments',
                                                                    'city'],
                                                              handle_missing='return_nan'))),
                ('trained_model', LGBMRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=0, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000015D7400E790>)
2023-05-30 23:21:09,104:INFO:Checking exceptions
2023-05-30 23:21:09,104:INFO:Preloading libraries
2023-05-30 23:21:09,104:INFO:Set up data.
2023-05-30 23:21:09,108:INFO:Set up index.
2023-05-30 23:21:24,425:INFO:Initializing predict_model()
2023-05-30 23:21:24,425:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000015D73EDF8E0>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['bedrooms', 'bathrooms'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['departments', 'property_type',
                                             'operation_type', 'city'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerW...operty_type', 'operation_type'],
                                    transformer=OneHotEncoder(cols=['property_type',
                                                                    'operation_type'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['departments', 'city'],
                                    transformer=TargetEncoder(cols=['departments',
                                                                    'city'],
                                                              handle_missing='return_nan'))),
                ('trained_model', LGBMRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=0, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000015D7400E820>)
2023-05-30 23:21:24,425:INFO:Checking exceptions
2023-05-30 23:21:24,425:INFO:Preloading libraries
2023-05-30 23:21:24,425:INFO:Set up data.
2023-05-30 23:21:24,429:INFO:Set up index.
2023-05-30 23:23:05,190:INFO:Initializing predict_model()
2023-05-30 23:23:05,190:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000015D73EDF970>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['bedrooms', 'bathrooms'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['departments', 'property_type',
                                             'operation_type', 'city'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerW...operty_type', 'operation_type'],
                                    transformer=OneHotEncoder(cols=['property_type',
                                                                    'operation_type'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['departments', 'city'],
                                    transformer=TargetEncoder(cols=['departments',
                                                                    'city'],
                                                              handle_missing='return_nan'))),
                ('trained_model', LGBMRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=0, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000015D7400E790>)
2023-05-30 23:23:05,190:INFO:Checking exceptions
2023-05-30 23:23:05,190:INFO:Preloading libraries
2023-05-30 23:23:05,190:INFO:Set up data.
2023-05-30 23:23:05,193:INFO:Set up index.
2023-05-30 23:23:15,728:INFO:Initializing predict_model()
2023-05-30 23:23:15,728:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000015D73EDF820>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['bedrooms', 'bathrooms'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['departments', 'property_type',
                                             'operation_type', 'city'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerW...operty_type', 'operation_type'],
                                    transformer=OneHotEncoder(cols=['property_type',
                                                                    'operation_type'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['departments', 'city'],
                                    transformer=TargetEncoder(cols=['departments',
                                                                    'city'],
                                                              handle_missing='return_nan'))),
                ('trained_model', LGBMRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=0, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000015D7400E820>)
2023-05-30 23:23:15,728:INFO:Checking exceptions
2023-05-30 23:23:15,728:INFO:Preloading libraries
2023-05-30 23:23:15,728:INFO:Set up data.
2023-05-30 23:23:15,731:INFO:Set up index.
2023-05-30 23:23:32,566:INFO:Initializing predict_model()
2023-05-30 23:23:32,567:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000015D73EDFA00>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['bedrooms', 'bathrooms'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['departments', 'property_type',
                                             'operation_type', 'city'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerW...operty_type', 'operation_type'],
                                    transformer=OneHotEncoder(cols=['property_type',
                                                                    'operation_type'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['departments', 'city'],
                                    transformer=TargetEncoder(cols=['departments',
                                                                    'city'],
                                                              handle_missing='return_nan'))),
                ('trained_model', LGBMRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=0, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000015D7400E790>)
2023-05-30 23:23:32,567:INFO:Checking exceptions
2023-05-30 23:23:32,567:INFO:Preloading libraries
2023-05-30 23:23:32,567:INFO:Set up data.
2023-05-30 23:23:32,570:INFO:Set up index.
